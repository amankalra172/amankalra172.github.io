{"version":3,"file":"component---src-pages-index-tsx-10229b2b8158624c2729.js","mappings":"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","sources":["webpack://www/../node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js","webpack://www/./src/constants/motion.ts","webpack://www/./src/components/blocks/motion-box.tsx","webpack://www/./src/components/buttons.tsx","webpack://www/./src/components/typography/heading.tsx","webpack://www/./src/constants/space.ts","webpack://www/./src/pages/index.tsx"],"sourcesContent":["import { useTheme } from '@chakra-ui/system';\nimport { isBrowser, __DEV__, memoizedGet, isNumber, breakpoints, isArray, fromEntries, arrayToObjectNotation } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport React__default from 'react';\nimport { useEnvironment } from '@chakra-ui/react-env';\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\n\nfunction useMediaQuery(query) {\n  var env = useEnvironment();\n  var queries = Array.isArray(query) ? query : [query];\n  var isSupported = isBrowser && \"matchMedia\" in env.window;\n\n  var _React$useState = React.useState(queries.map(function (query) {\n    return isSupported ? !!env.window.matchMedia(query).matches : false;\n  })),\n      matches = _React$useState[0],\n      setMatches = _React$useState[1];\n\n  useSafeLayoutEffect(function () {\n    if (!isSupported) return undefined;\n    var mediaQueryList = queries.map(function (query) {\n      return env.window.matchMedia(query);\n    });\n    var listenerList = mediaQueryList.map(function () {\n      var listener = function listener() {\n        var isEqual = function isEqual(prev, curr) {\n          return prev.length === curr.length && prev.every(function (elem, idx) {\n            return elem === curr[idx];\n          });\n        };\n\n        var currentMatches = mediaQueryList.map(function (mediaQuery) {\n          return mediaQuery.matches;\n        });\n\n        if (!isEqual(matches, currentMatches)) {\n          setMatches(currentMatches);\n        }\n      };\n\n      env.window.addEventListener(\"resize\", listener);\n      return listener;\n    });\n    return function () {\n      mediaQueryList.forEach(function (_, index) {\n        env.window.removeEventListener(\"resize\", listenerList[index]);\n      });\n    };\n  }, [query]);\n  return matches;\n}\n/**\n * Visibility\n *\n * React component to control the visibility of its\n * children based on the current breakpoint\n */\n\n\nvar Visibility = function Visibility(props) {\n  var breakpoint = props.breakpoint,\n      hide = props.hide,\n      children = props.children;\n\n  var _useMediaQuery = useMediaQuery(breakpoint),\n      show = _useMediaQuery[0];\n\n  var isVisible = hide ? !show : show;\n  var rendered = isVisible ? children : null;\n  return rendered;\n};\n\nvar Hide = function Hide(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true\n  }, children);\n};\n\nif (__DEV__) {\n  Hide.displayName = \"Hide\";\n}\n\nvar Show = function Show(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query\n  }, children);\n};\n\nif (__DEV__) {\n  Show.displayName = \"Show\";\n}\n\nvar getBreakpoint = function getBreakpoint(theme, value) {\n  return memoizedGet(theme, \"breakpoints.\" + value, value);\n};\n\nfunction useQuery(props) {\n  var _props$breakpoint = props.breakpoint,\n      breakpoint = _props$breakpoint === void 0 ? \"\" : _props$breakpoint,\n      below = props.below,\n      above = props.above;\n  var theme = useTheme();\n  var bpBelow = getBreakpoint(theme, below);\n  var bpAbove = getBreakpoint(theme, above);\n  var query = breakpoint;\n\n  if (bpBelow) {\n    query = \"(max-width: \" + bpBelow + \")\";\n  } else if (bpAbove) {\n    query = \"(min-width: \" + bpAbove + \")\";\n  }\n\n  return query;\n}\n/**\n * React hook used to get the user's animation preference.\n */\n\n\nfunction usePrefersReducedMotion() {\n  var _useMediaQuery = useMediaQuery(\"(prefers-reduced-motion: reduce)\"),\n      prefersReducedMotion = _useMediaQuery[0];\n\n  return prefersReducedMotion;\n}\n/**\n * React hook for getting the user's color mode preference.\n */\n\n\nfunction useColorModePreference() {\n  var _useMediaQuery2 = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"]),\n      isLight = _useMediaQuery2[0],\n      isDark = _useMediaQuery2[1];\n\n  if (isLight) return \"light\";\n  if (isDark) return \"dark\";\n  return undefined;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction createMediaQueries(breakpoints) {\n  return Object.entries(breakpoints) // sort css units in ascending order to ensure media queries are generated\n  // in the correct order and reference to each other correctly aswell\n  .sort(function (a, b) {\n    return Number.parseInt(a[1], 10) > Number.parseInt(b[1], 10) ? 1 : -1;\n  }).map(function (_ref, index, arr) {\n    var breakpoint = _ref[0],\n        minWidth = _ref[1]; // given a following breakpoint\n\n    var next = arr[index + 1]; // this breakpoint must end prior the threshold of the next\n\n    var maxWidth = next ? next[1] : undefined;\n    var query = createMediaQueryString(minWidth, maxWidth);\n    return {\n      minWidth: minWidth,\n      maxWidth: maxWidth,\n      breakpoint: breakpoint,\n      query: query\n    };\n  });\n}\n/**\n * Create a media query string from the breakpoints,\n * using a combination of `min-width` and `max-width`.\n */\n\n\nfunction createMediaQueryString(minWidth, maxWidth) {\n  var hasMinWidth = parseInt(minWidth, 10) >= 0;\n\n  if (!hasMinWidth && !maxWidth) {\n    return \"\";\n  }\n\n  var query = \"(min-width: \" + toMediaString(minWidth) + \")\";\n\n  if (!maxWidth) {\n    return query;\n  }\n\n  if (query) {\n    query += \" and \";\n  }\n\n  query += \"(max-width: \" + toMediaString(subtract(maxWidth)) + \")\";\n  return query;\n}\n\nvar measurementRegex = /([0-9]+\\.?[0-9]*)/;\n\nvar calculateMeasurement = function calculateMeasurement(value, modifier) {\n  if (typeof value === \"number\") {\n    return \"\" + (value + modifier);\n  }\n\n  return value.replace(measurementRegex, function (match) {\n    return \"\" + (parseFloat(match) + modifier);\n  });\n};\n/**\n * 0.01 and 0.1 are too small of a difference for `px` breakpoint values\n *\n * @see https://github.com/chakra-ui/chakra-ui/issues/2188#issuecomment-712774785\n */\n\n\nfunction subtract(value) {\n  return calculateMeasurement(value, value.endsWith(\"px\") ? -1 : -0.01);\n}\n/**\n * Convert media query value to string\n */\n\n\nfunction toMediaString(value) {\n  return isNumber(value) ? value + \"px\" : value;\n}\n\nvar _excluded = [\"query\"],\n    _excluded2 = [\"query\"];\n/**\n * React hook used to get the current responsive media breakpoint.\n *\n * @param defaultBreakpoint default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n */\n\nfunction useBreakpoint(defaultBreakpoint) {\n  var _useTheme = useTheme(),\n      breakpoints = _useTheme.breakpoints;\n\n  var env = useEnvironment();\n  var mediaQueries = React__default.useMemo(function () {\n    return createMediaQueries(_extends({\n      base: \"0px\"\n    }, breakpoints));\n  }, [breakpoints]);\n\n  var _React$useState = React__default.useState(function () {\n    if (!defaultBreakpoint) {\n      return undefined;\n    }\n\n    var mediaQuery = mediaQueries.find(function (_ref) {\n      var breakpoint = _ref.breakpoint;\n      return breakpoint === defaultBreakpoint;\n    });\n\n    if (mediaQuery) {\n      mediaQuery.query;\n\n      var breakpoint = _objectWithoutPropertiesLoose(mediaQuery, _excluded);\n\n      return breakpoint;\n    }\n\n    return undefined;\n  }),\n      currentBreakpoint = _React$useState[0],\n      setCurrentBreakpoint = _React$useState[1];\n\n  var current = currentBreakpoint == null ? void 0 : currentBreakpoint.breakpoint;\n  var update = React__default.useCallback(function (query, breakpoint) {\n    if (query.matches && current !== breakpoint.breakpoint) {\n      setCurrentBreakpoint(breakpoint);\n    }\n  }, [current]);\n  React__default.useEffect(function () {\n    var listeners = new Set();\n    mediaQueries.forEach(function (_ref2) {\n      var query = _ref2.query,\n          breakpoint = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n      var mediaQuery = env.window.matchMedia(query); // trigger an initial update to determine media query\n\n      update(mediaQuery, breakpoint);\n\n      var handleChange = function handleChange() {\n        update(mediaQuery, breakpoint);\n      }; // add media query-listener\n\n\n      mediaQuery.addListener(handleChange); // push the media query list handleChange\n      // so we can use it to remove Listener\n\n      listeners.add({\n        mediaQuery: mediaQuery,\n        handleChange: handleChange\n      });\n      return function () {\n        // clean up 1\n        mediaQuery.removeListener(handleChange);\n      };\n    });\n    return function () {\n      // clean up 2: for safety\n      listeners.forEach(function (_ref3) {\n        var mediaQuery = _ref3.mediaQuery,\n            handleChange = _ref3.handleChange;\n        mediaQuery.removeListener(handleChange);\n      });\n      listeners.clear();\n    };\n  }, [mediaQueries, breakpoints, update, env.window]);\n  return current;\n}\n\nfunction getClosestValue(values, breakpoint, breakpoints$1) {\n  if (breakpoints$1 === void 0) {\n    breakpoints$1 = breakpoints;\n  }\n\n  var index = Object.keys(values).indexOf(breakpoint);\n\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n\n  var stopIndex = breakpoints$1.indexOf(breakpoint);\n\n  while (stopIndex >= 0) {\n    var key = breakpoints$1[stopIndex];\n\n    if (values[key] != null) {\n      index = stopIndex;\n      break;\n    }\n\n    stopIndex -= 1;\n  }\n\n  if (index !== -1) {\n    var _key = breakpoints$1[index];\n    return values[_key];\n  }\n\n  return undefined;\n}\n/**\n * React hook for getting the value for the current breakpoint from the\n * provided responsive values object.\n *\n * @param values\n * @param defaultBreakpoint default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n *\n * @example\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\n */\n\n\nfunction useBreakpointValue(values, defaultBreakpoint) {\n  var breakpoint = useBreakpoint(defaultBreakpoint);\n  var theme = useTheme();\n  if (!breakpoint) return undefined;\n  /**\n   * Get the non-number breakpoint keys from the provided breakpoints\n   */\n\n  var breakpoints = Object.keys(theme.breakpoints);\n  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(function (_ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    return [key, value];\n  })) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\nexport { Hide, Show, useBreakpoint, useBreakpointValue, useColorModePreference, useMediaQuery, usePrefersReducedMotion, useQuery };","export const transforms = {\n  beforeHover: {\n    transform: `translate3d(0, 0, 0)`,\n    transition: `transform 0.4s cubic-bezier(0.34, 1.56, 0.64, 1), box-shadow 0.4s cubic-bezier(0.34, 1.56, 0.64, 1)`,\n  },\n  onHover: {\n    transform: `translate3d(0, -8px, 0)`,\n    boxShadow: `0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)`,\n  },\n}\n","import * as React from \"react\"\nimport { Box, BoxProps, usePrefersReducedMotion } from \"@chakra-ui/react\"\nimport { transforms } from \"../../constants/motion\"\n\nexport const MotionBox: React.FC<BoxProps> = ({ children, ...rest }) => {\n  const shouldReduceMotion = usePrefersReducedMotion()\n\n  return (\n    <Box\n      transition={transforms.beforeHover.transition}\n      transform={transforms.beforeHover.transform}\n      _hover={\n        shouldReduceMotion ? {} : { transform: transforms.onHover.transform, boxShadow: transforms.onHover.boxShadow }\n      }\n      {...rest}\n    >\n      {children}\n    </Box>\n  )\n}\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { BsArrowRight } from \"react-icons/bs\"\nimport { FaTwitter } from \"react-icons/fa\"\nimport { FiShare } from \"react-icons/fi\"\nimport { Button, usePrefersReducedMotion } from \"@chakra-ui/react\"\n\n/**\n * Primary buttons for important CTA\n */\nconst PrimaryButton: React.FC<{ to: string; isExternal?: boolean }> = ({ children, to, isExternal = false }) => {\n  const prefersReducedMotion = usePrefersReducedMotion()\n\n  return (\n    <Button\n      as={isExternal ? `a` : Link}\n      // @ts-ignore\n      to={isExternal ? undefined : to}\n      href={isExternal ? to : undefined}\n      variant=\"primary\"\n      rightIcon={<BsArrowRight />}\n      sx={{\n        span: {\n          transform: `translate3d(0px, 0px, 0px)`,\n          transition: `transform .3s cubic-bezier(.73,.26,.42,1.24)`,\n        },\n        \"&:hover\": {\n          span: {\n            transform: prefersReducedMotion ? undefined : `translate3d(6px, 0px, 0px)`,\n          },\n        },\n        svg: {\n          height: `1.5em`,\n          width: `1.5em`,\n        },\n      }}\n    >\n      {children}\n    </Button>\n  )\n}\n\n/**\n * Secondary button\n */\nconst SubtleButton: React.FC<{ to: string; isExternal?: boolean }> = ({ children, to, isExternal = false }) => {\n  const prefersReducedMotion = usePrefersReducedMotion()\n\n  return (\n    <Button\n      as={isExternal ? `a` : Link}\n      // @ts-ignore\n      to={isExternal ? undefined : to}\n      href={isExternal ? to : undefined}\n      colorScheme=\"gray\"\n      variant=\"link\"\n      textTransform=\"uppercase\"\n      letterSpacing=\"wider\"\n      fontSize={[`xs`, `sm`]}\n      fontWeight=\"medium\"\n      rightIcon={<BsArrowRight />}\n      sx={{\n        span: {\n          transform: `translate3d(0px, 0px, 0px)`,\n          transition: `transform .3s cubic-bezier(.73,.26,.42,1.24)`,\n        },\n        \"&:hover\": {\n          span: {\n            transform: prefersReducedMotion ? undefined : `translate3d(6px, 0px, 0px)`,\n          },\n        },\n        svg: {\n          height: `1.5em`,\n          width: `1.5em`,\n        },\n      }}\n    >\n      {children}\n    </Button>\n  )\n}\n\nconst getTwitterShareLink = (link, message) =>\n  `https://twitter.com/intent/tweet/?text=${encodeURIComponent(message)}&via=amankalra172&url=${encodeURIComponent(\n    link\n  )}`\n\nconst TwitterButton = ({ link, message, variant = `primary` }) => (\n  <Button\n    as=\"a\"\n    href={getTwitterShareLink(link, message)}\n    target=\"_blank\"\n    rel=\"noreferrer noopener\"\n    size=\"md\"\n    variant={variant}\n    rightIcon={<FaTwitter />}\n  >\n    Share on Twitter\n  </Button>\n)\n\nconst ShareAnywhereButton = ({ link, message, variant = `primary` }) => {\n  const handleSocialShare = (event) => {\n    event.preventDefault()\n\n    navigator\n      .share({\n        title: message,\n        text: `${message} by Aman Kalra (@amankalra172)`,\n        url: link,\n      })\n      // eslint-disable-next-line no-console\n      .then(() => console.log(`Successful share of ${link}`))\n      // eslint-disable-next-line no-console\n      .catch((error) => console.log(`Error sharing ${link}`, error))\n  }\n\n  return (\n    <Button onClick={handleSocialShare} size=\"md\" variant={variant} rightIcon={<FiShare />}>\n      Share Anywhere\n    </Button>\n  )\n}\n\nexport { PrimaryButton, SubtleButton, TwitterButton, ShareAnywhereButton }\n","import * as React from \"react\"\nimport { Heading as ChakraHeading, HeadingProps as ChakraHeadingProps } from \"@chakra-ui/react\"\n\ninterface HeadingProps extends ChakraHeadingProps {\n  as: \"h1\" | \"h2\" | \"h3\" | \"h4\"\n}\n\n/**\n * Heading component accepting heading levels\n * Wraps the Heading component from Chakra\n */\nexport const Heading: React.FC<HeadingProps> = ({ as, children, ...rest }) => (\n  <ChakraHeading as={as} variant={as} {...rest}>\n    {children}\n  </ChakraHeading>\n)\n","export const space = {\n  paddingLarge: [20, 24, null, 40, 48],\n  paddingMedium: [16, 24, null, 36, 40],\n  paddingSmall: [12, 16, null, 24, 28],\n}\n","import * as React from \"react\"\nimport { PageProps, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport {\n  Container,\n  Stack,\n  Text,\n  Badge,\n  Box,\n  Flex,\n  Grid,\n  Link as ChakraLink,\n  usePrefersReducedMotion,\n} from \"@chakra-ui/react\"\nimport { Link } from \"../components/link\"\nimport { Layout } from \"../components/blocks/layout\"\nimport { MotionBox } from \"../components/blocks/motion-box\"\nimport { FullWidthContainer } from \"../components/blocks/full-width-container\"\nimport { Spacer } from \"../components/blocks/spacer\"\nimport { SkipNavContent } from \"../components/a11y/skip-nav\"\nimport { Heading } from \"../components/typography/heading\"\nimport { PrimaryButton, SubtleButton } from \"../components/buttons\"\nimport { space } from \"../constants/space\"\nimport { SEO } from \"../components/seo\"\nimport { homepage } from \"../constants/json-ld\"\n\ntype DataProps = {\n  posts: {\n    nodes: {\n      title: string\n      description: string\n      slug: string\n    }[]\n  }\n  garden: {\n    nodes: {\n      title: string\n      slug: string\n    }[]\n  }\n  // primaryRepo: {\n  //   repository: RepositoryInfo\n  // }\n  // secondaryRepo: {\n  //   repository: RepositoryInfo\n  // }\n}\n\nconst cardGradients = [\n  `linear(to-tr, #A774F2, #F25D76, #FF964F)`,\n  `linear(to-tr, #9B7BFE, #54B5F0, #88F2A9)`,\n  `linear(to-tr, #933890, #E08896, #CC98DD, #D1CEE2)`,\n  `linear(to-tr, #6666DE, #5778C9, #94D1C9, #A1D8FF)`,\n  `linear(to-tr, #3e206d, #af3942, #d66a38, #eacc15)`,\n  `linear(to-tr, #511a2a, #cb598d, #b24ecb, #ebb8eb)`,\n]\n\nconst openSourceRepos = [\n  {\n    name: `Getting started`,\n    url: `https://loophole.cloud/blog/get-started-with-loophole`,\n  },\n  {\n    name: `Download`,\n    url: `https://loophole.cloud/download`,\n  },\n  {\n    name: `Docs`,\n    url: `https://loophole.cloud/docs`,\n  },\n  {\n    name: `Twitter`,\n    url: `https://twitter.com/loophole_cloud`,\n  },\n]\n\nconst Index: React.FC<PageProps<DataProps>> = ({ data }) => {\n  const shouldReduceMotion = usePrefersReducedMotion()\n  const [firstPost, ...rest] = data.posts.nodes\n  const otherPosts = [...rest]\n\n  // const primRepo = data.primaryRepo.repository\n  // const secRepo = data.secondaryRepo.repository\n\n  return (\n    <Layout>\n      <SEO>\n        <script type=\"application/ld+json\">{JSON.stringify(homepage)}</script>\n      </SEO>\n      <SkipNavContent>\n        <FullWidthContainer variant=\"hero\">\n          <Stack align=\"center\" spacing=\"5\" py={space.paddingLarge}>\n            <Heading as=\"h1\">Hi, I’m Aman Kalra!</Heading>\n            <Text variant=\"prominent\" maxWidth=\"45ch\" textAlign=\"center\">\n              <strong>Technology enthiusiast with interest in product!</strong> <br />\n              I’m passionate about products and data! Curious about its place in the businesses and future\n              sustainability.\n            </Text>\n            <Text variant=\"prominent\" maxWidth=\"40ch\" textAlign=\"center\">\n              Read more about <ChakraLink href=\"/machine-learning\">machine learning</ChakraLink> or{` `}\n              <ChakraLink href=\"/product\">product</ChakraLink>.\n            </Text>\n          </Stack>\n        </FullWidthContainer>\n        <FullWidthContainer variant=\"light\">\n          <Stack alignItems=\"flex-start\" spacing={24} py={space.paddingMedium}>\n            <Stack alignItems=\"flex-start\" spacing={[6, 8]}>\n              <Badge variant=\"light\">Latest Post</Badge>\n              <Box>\n                <Heading as=\"h2\">{firstPost.title}</Heading>\n                <Text variant=\"lightContainer\">{firstPost.description}</Text>\n              </Box>\n              <PrimaryButton to={firstPost.slug}>Continue Reading</PrimaryButton>\n            </Stack>\n            <Stack direction=\"column\" width=\"100%\" spacing={6}>\n              <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Badge variant=\"light\">More Posts</Badge>\n                <SubtleButton to=\"/writing\">Read all</SubtleButton>\n              </Flex>\n              <Grid templateColumns={[`repeat(1, 1fr)`, null, `repeat(3, 1fr)`]} gap={[4, null, 8]}>\n                {otherPosts.map((item, index) => (\n                  <Link\n                    to={item.slug}\n                    key={item.slug}\n                    borderRadius=\"lg\"\n                    _hover={{ textDecoration: `none`, boxShadow: shouldReduceMotion ? `outline` : null }}\n                  >\n                    <MotionBox\n                      bgGradient={cardGradients[index]}\n                      p={4}\n                      borderRadius=\"lg\"\n                      height={[`150px`, null, null, `200px`, `250px`]}\n                      boxShadow=\"lg\"\n                      display=\"flex\"\n                      alignItems=\"flex-end\"\n                      color=\"white\"\n                      fontSize={[`lg`, null, `md`, `1.125rem`, `1.3125rem`]}\n                      sx={{ textShadow: `0 1px 2px rgba(0, 0, 0, 0.5)` }}\n                    >\n                      {item.title}\n                    </MotionBox>\n                  </Link>\n                ))}\n              </Grid>\n            </Stack>\n            <Stack direction=\"column\" width=\"100%\" spacing={6}>\n              <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Badge variant=\"light\">Digital Garden</Badge>\n                <SubtleButton to=\"/garden\">Read all</SubtleButton>\n              </Flex>\n              <Grid templateColumns={[`repeat(1, 1fr)`, null, `repeat(3, 1fr)`]} gap={[4, null, 8]}>\n                {data.garden.nodes.map((item, index) => (\n                  <Link\n                    to={item.slug}\n                    key={item.slug}\n                    borderRadius=\"lg\"\n                    _hover={{ textDecoration: `none`, boxShadow: shouldReduceMotion ? `outline` : null }}\n                  >\n                    <MotionBox\n                      bgGradient={cardGradients[index + 3]}\n                      p={4}\n                      borderRadius=\"lg\"\n                      height={[`125px`, null, null, `175px`]}\n                      boxShadow=\"lg\"\n                      display=\"flex\"\n                      alignItems=\"flex-end\"\n                      color=\"white\"\n                      fontSize={[`lg`, null, `md`, `1.125rem`, `1.3125rem`]}\n                      sx={{ textShadow: `0 1px 2px rgba(0, 0, 0, 0.5)` }}\n                    >\n                      {item.title}\n                    </MotionBox>\n                  </Link>\n                ))}\n              </Grid>\n            </Stack>\n            <Stack direction=\"column\" width=\"100%\" spacing={6}>\n              <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Badge variant=\"light\">NFTs</Badge>\n                <SubtleButton to=\"/nfts\">My Latest NFts</SubtleButton>\n              </Flex>\n              <Grid gridTemplateColumns={[`repeat(1, 1fr)`, null, `repeat(2, 1fr)`]} gap={[4, null, 8]}>\n                <Link\n                  to=\"/nfts\"\n                  aria-label=\"Read about NFTs\"\n                  borderRadius=\"lg\"\n                  _hover={{ boxShadow: shouldReduceMotion ? `outline` : null }}\n                >\n                  <MotionBox\n                    sx={{\n                      \".gatsby-image-wrapper\": { borderRadius: `lg`, verticalAlign: `top` },\n                      img: { borderRadius: `lg` },\n                      boxShadow: `lg`,\n                      height: `100%`,\n                      width: `100%`,\n                      borderRadius: `lg`,\n                    }}\n                  >\n                    <StaticImage\n                      src=\"../images/pages-index-nfts-preview-1.jpg\"\n                      alt=\"\"\n                      layout=\"constrained\"\n                      quality={90}\n                      formats={[`auto`, `webp`, `avif`]}\n                      placeholder=\"blurred\"\n                      width={720}\n                      aspectRatio={16 / 9}\n                    />\n                  </MotionBox>\n                </Link>\n                <Link\n                  to=\"/nfts\"\n                  aria-label=\"Read about NFTs\"\n                  borderRadius=\"lg\"\n                  _hover={{ boxShadow: shouldReduceMotion ? `outline` : null }}\n                >\n                  <MotionBox\n                    sx={{\n                      \".gatsby-image-wrapper\": { borderRadius: `lg`, verticalAlign: `top` },\n                      img: { borderRadius: `lg` },\n                      boxShadow: `lg`,\n                      height: `100%`,\n                      width: `100%`,\n                      borderRadius: `lg`,\n                    }}\n                  >\n                    <StaticImage\n                      src=\"../images/pages-index-nfts-preview-2.jpg\"\n                      alt=\"\"\n                      layout=\"constrained\"\n                      quality={90}\n                      formats={[`auto`, `webp`, `avif`]}\n                      placeholder=\"blurred\"\n                      width={720}\n                      aspectRatio={16 / 9}\n                    />\n                  </MotionBox>\n                </Link>\n              </Grid>\n            </Stack>\n          </Stack>\n        </FullWidthContainer>\n        <Container>\n          <Flex alignItems=\"center\" flexDirection=\"column\" py={space.paddingLarge}>\n            <Heading as=\"h2\">Loophole.Cloud</Heading>\n            <Text variant=\"prominent\" maxWidth=\"40ch\" textAlign=\"center\">\n              Working with one of the most enthusiastic team to build and maintain Loophole, accessible to everyone\n              fills me with joy.\n            </Text>\n            <Spacer axis=\"vertical\" size={20} />\n            <Stack direction=\"column\" width=\"100%\" spacing={6}>\n              <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Badge variant=\"dark\">Links</Badge>\n                <SubtleButton isExternal to=\"https://loophole.cloud/\">\n                  Know More!\n                </SubtleButton>\n              </Flex>\n              {/* <Grid gridTemplateColumns={[`1fr`, null, null, `2fr 1fr`]} gap={6}>\n                <Box bg={primaryRepoBg} color=\"#e7f1ff\" p={6} borderRadius=\"lg\">\n                  <Flex flexDirection=\"row\" justifyContent=\"space-between\" mb={6}>\n                    <ChakraLink\n                      fontSize={[`lg`, null, null, null, `1.3125rem`]}\n                      color=\"white\"\n                      fontWeight=\"bold\"\n                      href={primRepo.url}\n                    >\n                      {primRepo.name}\n                    </ChakraLink>\n                    <Tag variant=\"subtle\" colorScheme=\"blue\">\n                      <TagLeftIcon as={FaStar} />\n                      <TagLabel>{primRepo.stargazerCount}</TagLabel>\n                    </Tag>\n                  </Flex>\n                  <Text>{primRepo.description}</Text>\n                </Box>\n                <Box bg={secondaryRepoBg} p={6} borderRadius=\"lg\">\n                  <Flex flexDirection=\"row\" justifyContent=\"space-between\" mb={6}>\n                    <ChakraLink fontSize={[`lg`, null, null, null, `1.3125rem`]} fontWeight=\"bold\" href={secRepo.url}>\n                      {secRepo.name}\n                    </ChakraLink>\n                    <Tag variant=\"subtle\" colorScheme=\"gray\">\n                      <TagLeftIcon as={FaStar} />\n                      <TagLabel>{secRepo.stargazerCount}</TagLabel>\n                    </Tag>\n                  </Flex>\n                  <Text>{secRepo.description}</Text>\n                </Box>\n              </Grid> */}\n              <Flex justifyContent=\"space-between\" flexWrap=\"wrap\">\n                {openSourceRepos.map((repo) => (\n                  <ChakraLink key={repo.url} href={repo.url} p={2}>\n                    {repo.name}\n                  </ChakraLink>\n                ))}\n              </Flex>\n            </Stack>\n          </Flex>\n        </Container>\n      </SkipNavContent>\n    </Layout>\n  )\n}\n\nexport default Index\n\nexport const query = graphql`\n  {\n    posts: allPost(filter: { published: { eq: true } }, sort: { fields: date, order: DESC }, limit: 4) {\n      nodes {\n        title\n        description\n        slug\n      }\n    }\n    garden: allGarden(\n      limit: 3\n      sort: { fields: lastUpdated, order: DESC }\n      filter: { slug: { ne: \"/garden/what-is-a-digital-garden\" } }\n    ) {\n      nodes {\n        title\n        slug\n      }\n    }\n  }\n`\n"],"names":["useSafeLayoutEffect","useMediaQuery","query","env","queries","Array","isArray","isSupported","window","_React$useState","map","matchMedia","matches","setMatches","mediaQueryList","listenerList","listener","prev","curr","currentMatches","mediaQuery","length","every","elem","idx","addEventListener","forEach","_","index","removeEventListener","usePrefersReducedMotion","transforms","transform","transition","boxShadow","MotionBox","children","rest","shouldReduceMotion","_hover","PrimaryButton","to","isExternal","prefersReducedMotion","as","Link","undefined","href","variant","rightIcon","sx","span","svg","height","width","SubtleButton","colorScheme","textTransform","letterSpacing","fontSize","fontWeight","getTwitterShareLink","link","message","encodeURIComponent","TwitterButton","target","rel","size","ShareAnywhereButton","onClick","event","preventDefault","navigator","share","title","text","url","then","console","log","catch","error","Heading","space","paddingLarge","paddingMedium","paddingSmall","cardGradients","openSourceRepos","name","data","posts","nodes","firstPost","otherPosts","type","JSON","stringify","homepage","align","spacing","py","maxWidth","textAlign","alignItems","description","slug","direction","justifyContent","templateColumns","gap","item","key","borderRadius","textDecoration","bgGradient","p","display","color","textShadow","garden","gridTemplateColumns","verticalAlign","img","S","src","alt","layout","quality","formats","placeholder","aspectRatio","flexDirection","axis","flexWrap","repo"],"sourceRoot":""}