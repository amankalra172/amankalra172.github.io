{"version":3,"file":"component---src-pages-index-tsx-1859eadabaedf945725a.js","mappings":"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","sources":["webpack://www/../node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js","webpack://www/./src/constants/motion.ts","webpack://www/./src/components/blocks/motion-box.tsx","webpack://www/./src/components/buttons.tsx","webpack://www/./src/components/typography/heading.tsx","webpack://www/./src/constants/space.ts","webpack://www/./src/pages/index.tsx"],"sourcesContent":["import { useTheme } from '@chakra-ui/system';\nimport { isBrowser, __DEV__, memoizedGet, breakpoints, isArray, fromEntries, arrayToObjectNotation } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport React__default from 'react';\nimport { useEnvironment } from '@chakra-ui/react-env';\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\n\nfunction useMediaQuery(query) {\n  var env = useEnvironment();\n  var queries = Array.isArray(query) ? query : [query];\n  var isSupported = isBrowser && \"matchMedia\" in env.window;\n  var _React$useState = React.useState(queries.map(function (query) {\n      return isSupported ? !!env.window.matchMedia(query).matches : false;\n    })),\n    matches = _React$useState[0],\n    setMatches = _React$useState[1]; // Specifying matches in the dependency list will cause the event listeners\n  // to unload and then load each time the dependency changes. This causes\n  // Media Query Events to be missed. The event listeners should only be unloaded\n  // when the component unloads.\n\n  useSafeLayoutEffect(function () {\n    if (!isSupported) return undefined;\n    var mediaQueryList = queries.map(function (query) {\n      return env.window.matchMedia(query);\n    });\n    var listenerList = mediaQueryList.map(function (_, index) {\n      var listener = function listener(mqlEvent) {\n        var queryIndex = mediaQueryList.findIndex(function (mediaQuery) {\n          return mediaQuery.media === mqlEvent.media;\n        }); // As the event listener is on the media query list, any time the\n        // listener is called, we know there is a change. There's no need\n        // to compare the previous matches with current. Using\n        // setMatches(matches => {...}) provides access to the current matches\n        // state.  Trying to access matches outside the setMatches function\n        // would provide data from the the time of instantiation (stale).\n\n        setMatches(function (matches) {\n          var currentMatches = matches.map(function (x) {\n            return x;\n          });\n          currentMatches[queryIndex] = mqlEvent.matches;\n          return currentMatches;\n        });\n      }; // Listening to the 'change' event on the Media Query List Object\n      // is more performant as the callback is only invoked when a specified\n      // media query is matched. Using addEventListener on the window object\n      // to listen for the resize event will call the callback on every\n      // viewport resize.\n\n      if (typeof mediaQueryList[index].addEventListener === \"function\") {\n        mediaQueryList[index].addEventListener(\"change\", listener);\n      } else {\n        mediaQueryList[index].addListener(listener);\n      }\n      return listener;\n    });\n    return function () {\n      mediaQueryList.forEach(function (_, index) {\n        if (typeof mediaQueryList[index].removeEventListener === \"function\") {\n          mediaQueryList[index].removeEventListener(\"change\", listenerList[index]);\n        } else {\n          mediaQueryList[index].removeListener(listenerList[index]);\n        }\n      });\n    };\n  }, []);\n  return matches;\n}\n\n/**\n * Visibility\n *\n * React component to control the visibility of its\n * children based on the current breakpoint\n */\nvar Visibility = function Visibility(props) {\n  var breakpoint = props.breakpoint,\n    hide = props.hide,\n    children = props.children;\n  var _useMediaQuery = useMediaQuery(breakpoint),\n    show = _useMediaQuery[0];\n  var isVisible = hide ? !show : show;\n  var rendered = isVisible ? children : null;\n  return rendered;\n};\nvar Hide = function Hide(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true\n  }, children);\n};\nif (__DEV__) {\n  Hide.displayName = \"Hide\";\n}\nvar Show = function Show(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query\n  }, children);\n};\nif (__DEV__) {\n  Show.displayName = \"Show\";\n}\nvar getBreakpoint = function getBreakpoint(theme, value) {\n  return memoizedGet(theme, \"breakpoints.\" + value, value);\n};\nfunction useQuery(props) {\n  var _props$breakpoint = props.breakpoint,\n    breakpoint = _props$breakpoint === void 0 ? \"\" : _props$breakpoint,\n    below = props.below,\n    above = props.above;\n  var theme = useTheme();\n  var bpBelow = getBreakpoint(theme, below);\n  var bpAbove = getBreakpoint(theme, above);\n  var query = breakpoint;\n  if (bpBelow) {\n    query = \"(max-width: \" + bpBelow + \")\";\n  } else if (bpAbove) {\n    query = \"(min-width: \" + bpAbove + \")\";\n  }\n  return query;\n}\n\n/**\n * React hook used to get the user's animation preference.\n */\n\nfunction usePrefersReducedMotion() {\n  var _useMediaQuery = useMediaQuery(\"(prefers-reduced-motion: reduce)\"),\n    prefersReducedMotion = _useMediaQuery[0];\n  return prefersReducedMotion;\n}\n/**\n * React hook for getting the user's color mode preference.\n */\n\nfunction useColorModePreference() {\n  var _useMediaQuery2 = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"]),\n    isLight = _useMediaQuery2[0],\n    isDark = _useMediaQuery2[1];\n  if (isLight) return \"light\";\n  if (isDark) return \"dark\";\n  return undefined;\n}\n\n/**\n * React hook used to get the current responsive media breakpoint.\n *\n * @param [defaultBreakpoint=\"base\"] default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n */\n\nfunction useBreakpoint(defaultBreakpoint // default value ensures SSR+CSR consistency\n) {\n  if (defaultBreakpoint === void 0) {\n    defaultBreakpoint = \"base\";\n  }\n  var _useTheme = useTheme(),\n    __breakpoints = _useTheme.__breakpoints;\n  var env = useEnvironment();\n  var queries = React__default.useMemo(function () {\n    var _breakpoints$details;\n    return (_breakpoints$details = __breakpoints == null ? void 0 : __breakpoints.details.map(function (_ref) {\n      var minMaxQuery = _ref.minMaxQuery,\n        breakpoint = _ref.breakpoint;\n      return {\n        breakpoint: breakpoint,\n        query: minMaxQuery.replace(\"@media screen and \", \"\")\n      };\n    })) != null ? _breakpoints$details : [];\n  }, [__breakpoints]);\n  var _React$useState = React__default.useState(function () {\n      if (defaultBreakpoint) {\n        // use default breakpoint to ensure render consistency in SSR + CSR environments\n        // => first render on the client has to match the render on the server\n        var fallbackBreakpointDetail = queries.find(function (_ref2) {\n          var breakpoint = _ref2.breakpoint;\n          return breakpoint === defaultBreakpoint;\n        });\n        if (fallbackBreakpointDetail) {\n          return fallbackBreakpointDetail.breakpoint;\n        }\n      }\n      if (env.window.matchMedia) {\n        // set correct breakpoint on first render if no default breakpoint was provided\n        var matchingBreakpointDetail = queries.find(function (_ref3) {\n          var query = _ref3.query;\n          return env.window.matchMedia(query).matches;\n        });\n        if (matchingBreakpointDetail) {\n          return matchingBreakpointDetail.breakpoint;\n        }\n      }\n      return undefined;\n    }),\n    currentBreakpoint = _React$useState[0],\n    setCurrentBreakpoint = _React$useState[1];\n  React__default.useEffect(function () {\n    var allUnregisterFns = queries.map(function (_ref4) {\n      var breakpoint = _ref4.breakpoint,\n        query = _ref4.query;\n      var mediaQueryList = env.window.matchMedia(query);\n      if (mediaQueryList.matches) {\n        setCurrentBreakpoint(breakpoint);\n      }\n      var handleChange = function handleChange(ev) {\n        if (ev.matches) {\n          setCurrentBreakpoint(breakpoint);\n        }\n      }; // add media query listener\n\n      if (typeof mediaQueryList.addEventListener === \"function\") {\n        mediaQueryList.addEventListener(\"change\", handleChange);\n      } else {\n        mediaQueryList.addListener(handleChange);\n      } // return unregister fn\n\n      return function () {\n        if (typeof mediaQueryList.removeEventListener === \"function\") {\n          mediaQueryList.removeEventListener(\"change\", handleChange);\n        } else {\n          mediaQueryList.removeListener(handleChange);\n        }\n      };\n    });\n    return function () {\n      allUnregisterFns.forEach(function (unregister) {\n        return unregister();\n      });\n    };\n  }, [queries, __breakpoints, env.window]);\n  return currentBreakpoint;\n}\nfunction getClosestValue(values, breakpoint, breakpoints$1) {\n  if (breakpoints$1 === void 0) {\n    breakpoints$1 = breakpoints;\n  }\n  var index = Object.keys(values).indexOf(breakpoint);\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n  var stopIndex = breakpoints$1.indexOf(breakpoint);\n  while (stopIndex >= 0) {\n    var key = breakpoints$1[stopIndex];\n    if (values[key] != null) {\n      index = stopIndex;\n      break;\n    }\n    stopIndex -= 1;\n  }\n  if (index !== -1) {\n    var _key = breakpoints$1[index];\n    return values[_key];\n  }\n  return undefined;\n}\n\n/**\n * React hook for getting the value for the current breakpoint from the\n * provided responsive values object.\n *\n * @param values\n * @param [defaultBreakpoint] default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n *\n * @example\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\n */\n\nfunction useBreakpointValue(values, defaultBreakpoint) {\n  var _theme$__breakpoints;\n  var breakpoint = useBreakpoint(defaultBreakpoint);\n  var theme = useTheme();\n  if (!breakpoint) return undefined;\n  /**\n   * Get the sorted breakpoint keys from the provided breakpoints\n   */\n\n  var breakpoints = Array.from(((_theme$__breakpoints = theme.__breakpoints) == null ? void 0 : _theme$__breakpoints.keys) || []);\n  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(function (_ref) {\n    var key = _ref[0],\n      value = _ref[1];\n    return [key, value];\n  })) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\nexport { Hide, Show, useBreakpoint, useBreakpointValue, useColorModePreference, useMediaQuery, usePrefersReducedMotion, useQuery };","export const transforms = {\n  beforeHover: {\n    transform: `translate3d(0, 0, 0)`,\n    transition: `transform 0.4s cubic-bezier(0.34, 1.56, 0.64, 1), box-shadow 0.4s cubic-bezier(0.34, 1.56, 0.64, 1)`,\n  },\n  onHover: {\n    transform: `translate3d(0, -8px, 0)`,\n    boxShadow: `0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)`,\n  },\n}\n","import * as React from \"react\"\nimport { Box, BoxProps, usePrefersReducedMotion } from \"@chakra-ui/react\"\nimport { transforms } from \"../../constants/motion\"\n\nexport const MotionBox: React.FC<BoxProps> = ({ children, ...rest }) => {\n  const shouldReduceMotion = usePrefersReducedMotion()\n\n  return (\n    <Box\n      transition={transforms.beforeHover.transition}\n      transform={transforms.beforeHover.transform}\n      _hover={\n        shouldReduceMotion ? {} : { transform: transforms.onHover.transform, boxShadow: transforms.onHover.boxShadow }\n      }\n      {...rest}\n    >\n      {children}\n    </Box>\n  )\n}\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { BsArrowRight } from \"react-icons/bs\"\nimport { FaTwitter } from \"react-icons/fa\"\nimport { FiShare } from \"react-icons/fi\"\nimport { Button, usePrefersReducedMotion } from \"@chakra-ui/react\"\n\n/**\n * Primary buttons for important CTA\n */\nconst PrimaryButton: React.FC<{ to: string; isExternal?: boolean }> = ({ children, to, isExternal = false }) => {\n  const prefersReducedMotion = usePrefersReducedMotion()\n\n  return (\n    <Button\n      as={isExternal ? `a` : Link}\n      // @ts-ignore\n      to={isExternal ? undefined : to}\n      href={isExternal ? to : undefined}\n      variant=\"primary\"\n      rightIcon={<BsArrowRight />}\n      sx={{\n        span: {\n          transform: `translate3d(0px, 0px, 0px)`,\n          transition: `transform .3s cubic-bezier(.73,.26,.42,1.24)`,\n        },\n        \"&:hover\": {\n          span: {\n            transform: prefersReducedMotion ? undefined : `translate3d(6px, 0px, 0px)`,\n          },\n        },\n        svg: {\n          height: `1.5em`,\n          width: `1.5em`,\n        },\n      }}\n    >\n      {children}\n    </Button>\n  )\n}\n\n/**\n * Secondary button\n */\nconst SubtleButton: React.FC<{ to: string; isExternal?: boolean }> = ({ children, to, isExternal = false }) => {\n  const prefersReducedMotion = usePrefersReducedMotion()\n\n  return (\n    <Button\n      as={isExternal ? `a` : Link}\n      // @ts-ignore\n      to={isExternal ? undefined : to}\n      href={isExternal ? to : undefined}\n      colorScheme=\"gray\"\n      variant=\"link\"\n      textTransform=\"uppercase\"\n      letterSpacing=\"wider\"\n      fontSize={[`xs`, `sm`]}\n      fontWeight=\"medium\"\n      rightIcon={<BsArrowRight />}\n      sx={{\n        span: {\n          transform: `translate3d(0px, 0px, 0px)`,\n          transition: `transform .3s cubic-bezier(.73,.26,.42,1.24)`,\n        },\n        \"&:hover\": {\n          span: {\n            transform: prefersReducedMotion ? undefined : `translate3d(6px, 0px, 0px)`,\n          },\n        },\n        svg: {\n          height: `1.5em`,\n          width: `1.5em`,\n        },\n      }}\n    >\n      {children}\n    </Button>\n  )\n}\n\nconst getTwitterShareLink = (link, message) =>\n  `https://twitter.com/intent/tweet/?text=${encodeURIComponent(message)}&via=amankalra172&url=${encodeURIComponent(\n    link\n  )}`\n\nconst TwitterButton = ({ link, message, variant = `primary` }) => (\n  <Button\n    as=\"a\"\n    href={getTwitterShareLink(link, message)}\n    target=\"_blank\"\n    rel=\"noreferrer noopener\"\n    size=\"md\"\n    variant={variant}\n    rightIcon={<FaTwitter />}\n  >\n    Share on Twitter\n  </Button>\n)\n\nconst ShareAnywhereButton = ({ link, message, variant = `primary` }) => {\n  const handleSocialShare = (event) => {\n    event.preventDefault()\n\n    navigator\n      .share({\n        title: message,\n        text: `${message} by Aman Kalra (@amankalra172)`,\n        url: link,\n      })\n      // eslint-disable-next-line no-console\n      .then(() => console.log(`Successful share of ${link}`))\n      // eslint-disable-next-line no-console\n      .catch((error) => console.log(`Error sharing ${link}`, error))\n  }\n\n  return (\n    <Button onClick={handleSocialShare} size=\"md\" variant={variant} rightIcon={<FiShare />}>\n      Share Anywhere\n    </Button>\n  )\n}\n\nexport { PrimaryButton, SubtleButton, TwitterButton, ShareAnywhereButton }\n","import * as React from \"react\"\nimport { Heading as ChakraHeading, HeadingProps as ChakraHeadingProps } from \"@chakra-ui/react\"\n\ninterface HeadingProps extends ChakraHeadingProps {\n  as: \"h1\" | \"h2\" | \"h3\" | \"h4\"\n}\n\n/**\n * Heading component accepting heading levels\n * Wraps the Heading component from Chakra\n */\nexport const Heading: React.FC<HeadingProps> = ({ as, children, ...rest }) => (\n  <ChakraHeading as={as} variant={as} {...rest}>\n    {children}\n  </ChakraHeading>\n)\n","export const space = {\n  paddingLarge: [20, 24, null, 40, 48],\n  paddingMedium: [16, 24, null, 36, 40],\n  paddingSmall: [12, 16, null, 24, 28],\n}\n","import * as React from \"react\"\nimport { PageProps, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport {\n  Container,\n  Stack,\n  Text,\n  Badge,\n  Box,\n  Flex,\n  Grid,\n  Link as ChakraLink,\n  usePrefersReducedMotion,\n} from \"@chakra-ui/react\"\nimport { Link } from \"../components/link\"\nimport { Layout } from \"../components/blocks/layout\"\nimport { MotionBox } from \"../components/blocks/motion-box\"\nimport { FullWidthContainer } from \"../components/blocks/full-width-container\"\nimport { Spacer } from \"../components/blocks/spacer\"\nimport { SkipNavContent } from \"../components/a11y/skip-nav\"\nimport { Heading } from \"../components/typography/heading\"\nimport { PrimaryButton, SubtleButton } from \"../components/buttons\"\nimport { space } from \"../constants/space\"\nimport { SEO } from \"../components/seo\"\nimport { homepage } from \"../constants/json-ld\"\n\ntype DataProps = {\n  posts: {\n    nodes: {\n      title: string\n      description: string\n      slug: string\n    }[]\n  }\n  garden: {\n    nodes: {\n      title: string\n      slug: string\n    }[]\n  }\n  // primaryRepo: {\n  //   repository: RepositoryInfo\n  // }\n  // secondaryRepo: {\n  //   repository: RepositoryInfo\n  // }\n}\n\nconst cardGradients = [\n  `linear(to-tr, #A774F2, #F25D76, #FF964F)`,\n  `linear(to-tr, #9B7BFE, #54B5F0, #88F2A9)`,\n  `linear(to-tr, #933890, #E08896, #CC98DD, #D1CEE2)`,\n  `linear(to-tr, #6666DE, #5778C9, #94D1C9, #A1D8FF)`,\n  `linear(to-tr, #3e206d, #af3942, #d66a38, #eacc15)`,\n  `linear(to-tr, #511a2a, #cb598d, #b24ecb, #ebb8eb)`,\n]\n\nconst openSourceRepos = [\n  {\n    name: `Getting started`,\n    url: `https://loophole.cloud/blog/get-started-with-loophole`,\n  },\n  {\n    name: `Download`,\n    url: `https://loophole.cloud/download`,\n  },\n  {\n    name: `Docs`,\n    url: `https://loophole.cloud/docs`,\n  },\n  {\n    name: `Twitter`,\n    url: `https://twitter.com/loophole_cloud`,\n  },\n]\n\nconst Index: React.FC<PageProps<DataProps>> = ({ data }) => {\n  const shouldReduceMotion = usePrefersReducedMotion()\n  const [firstPost, ...rest] = data.posts.nodes\n  const otherPosts = [...rest]\n\n  // const primRepo = data.primaryRepo.repository\n  // const secRepo = data.secondaryRepo.repository\n\n  return (\n    <Layout>\n      <SEO>\n        <script type=\"application/ld+json\">{JSON.stringify(homepage)}</script>\n      </SEO>\n      <SkipNavContent>\n        <FullWidthContainer variant=\"hero\">\n          <Stack align=\"center\" spacing=\"5\" py={space.paddingLarge}>\n            <Heading as=\"h1\">Hi, I’m Aman Kalra!</Heading>\n            <Text variant=\"prominent\" maxWidth=\"45ch\" textAlign=\"center\">\n              <strong>Technology enthiusiast with interest in product!</strong> <br />\n            </Text>\n            <Text variant=\"prominent\" maxWidth=\"45ch\" textAlign=\"center\">\n              I’m passionate about products and data! Curious about its place in the businesses and future\n              sustainability.\n            </Text>\n            <Text variant=\"prominent\" maxWidth=\"40ch\" textAlign=\"center\">\n            &#x1F680; Check out my recent project : <ChakraLink href=\"https://growth-ai.amankalra.com/\" target=\"_blank\"> Growth AI</ChakraLink>\n            </Text>\n          </Stack> \n        </FullWidthContainer>\n        <FullWidthContainer variant=\"light\">\n          <Stack alignItems=\"flex-start\" spacing={24} py={space.paddingMedium}>\n            <Stack alignItems=\"flex-start\" spacing={[6, 8]}>\n              <Badge variant=\"light\">Latest Post</Badge>\n              <Box>\n                <Heading as=\"h2\">{firstPost.title}</Heading>\n                <Text variant=\"lightContainer\">{firstPost.description}</Text>\n              </Box>\n              <PrimaryButton to={firstPost.slug}>Continue Reading</PrimaryButton>\n            </Stack>\n            <Stack direction=\"column\" width=\"100%\" spacing={6}>\n              <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Badge variant=\"light\">More Posts</Badge>\n                <SubtleButton to=\"/writing\">Read all</SubtleButton>\n              </Flex>\n              <Grid templateColumns={[`repeat(1, 1fr)`, null, `repeat(3, 1fr)`]} gap={[4, null, 8]}>\n                {otherPosts.map((item, index) => (\n                  <Link\n                    to={item.slug}\n                    key={item.slug}\n                    borderRadius=\"lg\"\n                    _hover={{ textDecoration: `none`, boxShadow: shouldReduceMotion ? `outline` : null }}\n                  >\n                    <MotionBox\n                      bgGradient={cardGradients[index]}\n                      p={4}\n                      borderRadius=\"lg\"\n                      height={[`150px`, null, null, `200px`, `250px`]}\n                      boxShadow=\"lg\"\n                      display=\"flex\"\n                      alignItems=\"flex-end\"\n                      color=\"white\"\n                      fontSize={[`lg`, null, `md`, `1.125rem`, `1.3125rem`]}\n                      sx={{ textShadow: `0 1px 2px rgba(0, 0, 0, 0.5)` }}\n                    >\n                      {item.title}\n                    </MotionBox>\n                  </Link>\n                ))}\n              </Grid>\n            </Stack>\n            <Stack direction=\"column\" width=\"100%\" spacing={6}>\n              <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Badge variant=\"light\">Digital Garden</Badge>\n                <SubtleButton to=\"/garden\">Read all</SubtleButton>\n              </Flex>\n              <Grid templateColumns={[`repeat(1, 1fr)`, null, `repeat(3, 1fr)`]} gap={[4, null, 8]}>\n                {data.garden.nodes.map((item, index) => (\n                  <Link\n                    to={item.slug}\n                    key={item.slug}\n                    borderRadius=\"lg\"\n                    _hover={{ textDecoration: `none`, boxShadow: shouldReduceMotion ? `outline` : null }}\n                  >\n                    <MotionBox\n                      bgGradient={cardGradients[index + 3]}\n                      p={4}\n                      borderRadius=\"lg\"\n                      height={[`125px`, null, null, `175px`]}\n                      boxShadow=\"lg\"\n                      display=\"flex\"\n                      alignItems=\"flex-end\"\n                      color=\"white\"\n                      fontSize={[`lg`, null, `md`, `1.125rem`, `1.3125rem`]}\n                      sx={{ textShadow: `0 1px 2px rgba(0, 0, 0, 0.5)` }}\n                    >\n                      {item.title}\n                    </MotionBox>\n                  </Link>\n                ))}\n              </Grid>\n            </Stack>\n            <Stack direction=\"column\" width=\"100%\" spacing={6}>\n              <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Badge variant=\"light\">NFTs</Badge>\n                <SubtleButton to=\"/nfts\">My Latest NFts</SubtleButton>\n              </Flex>\n              <Grid gridTemplateColumns={[`repeat(1, 1fr)`, null, `repeat(2, 1fr)`]} gap={[4, null, 8]}>\n                <Link\n                  to=\"/nfts\"\n                  aria-label=\"Read about NFTs\"\n                  borderRadius=\"lg\"\n                  _hover={{ boxShadow: shouldReduceMotion ? `outline` : null }}\n                >\n                  <MotionBox\n                    sx={{\n                      \".gatsby-image-wrapper\": { borderRadius: `lg`, verticalAlign: `top` },\n                      img: { borderRadius: `lg` },\n                      boxShadow: `lg`,\n                      height: `100%`,\n                      width: `100%`,\n                      borderRadius: `lg`,\n                    }}\n                  >\n                    <StaticImage\n                      src=\"../images/pages-index-nfts-preview-1.jpg\"\n                      alt=\"\"\n                      layout=\"constrained\"\n                      quality={90}\n                      formats={[`auto`, `webp`, `avif`]}\n                      placeholder=\"blurred\"\n                      width={720}\n                      aspectRatio={16 / 9}\n                    />\n                  </MotionBox>\n                </Link>\n                <Link\n                  to=\"/nfts\"\n                  aria-label=\"Read about NFTs\"\n                  borderRadius=\"lg\"\n                  _hover={{ boxShadow: shouldReduceMotion ? `outline` : null }}\n                >\n                  <MotionBox\n                    sx={{\n                      \".gatsby-image-wrapper\": { borderRadius: `lg`, verticalAlign: `top` },\n                      img: { borderRadius: `lg` },\n                      boxShadow: `lg`,\n                      height: `100%`,\n                      width: `100%`,\n                      borderRadius: `lg`,\n                    }}\n                  >\n                    <StaticImage\n                      src=\"../images/pages-index-nfts-preview-2.jpg\"\n                      alt=\"\"\n                      layout=\"constrained\"\n                      quality={90}\n                      formats={[`auto`, `webp`, `avif`]}\n                      placeholder=\"blurred\"\n                      width={720}\n                      aspectRatio={16 / 9}\n                    />\n                  </MotionBox>\n                </Link>\n              </Grid>\n            </Stack>\n          </Stack>\n        </FullWidthContainer>\n        <Container>\n          <Flex alignItems=\"center\" flexDirection=\"column\" py={space.paddingLarge}>\n            <Heading as=\"h2\">Loophole.Cloud</Heading>\n            <Text variant=\"prominent\" maxWidth=\"40ch\" textAlign=\"center\">\n              Working with one of the most enthusiastic team to build and maintain Loophole, accessible to everyone\n              fills me with joy.\n            </Text>\n            <Spacer axis=\"vertical\" size={20} />\n            <Stack direction=\"column\" width=\"100%\" spacing={6}>\n              <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Badge variant=\"dark\">Links</Badge>\n                <SubtleButton isExternal to=\"https://loophole.cloud/\">\n                  Know More!\n                </SubtleButton>\n              </Flex>\n              {/* <Grid gridTemplateColumns={[`1fr`, null, null, `2fr 1fr`]} gap={6}>\n                <Box bg={primaryRepoBg} color=\"#e7f1ff\" p={6} borderRadius=\"lg\">\n                  <Flex flexDirection=\"row\" justifyContent=\"space-between\" mb={6}>\n                    <ChakraLink\n                      fontSize={[`lg`, null, null, null, `1.3125rem`]}\n                      color=\"white\"\n                      fontWeight=\"bold\"\n                      href={primRepo.url}\n                    >\n                      {primRepo.name}\n                    </ChakraLink>\n                    <Tag variant=\"subtle\" colorScheme=\"blue\">\n                      <TagLeftIcon as={FaStar} />\n                      <TagLabel>{primRepo.stargazerCount}</TagLabel>\n                    </Tag>\n                  </Flex>\n                  <Text>{primRepo.description}</Text>\n                </Box>\n                <Box bg={secondaryRepoBg} p={6} borderRadius=\"lg\">\n                  <Flex flexDirection=\"row\" justifyContent=\"space-between\" mb={6}>\n                    <ChakraLink fontSize={[`lg`, null, null, null, `1.3125rem`]} fontWeight=\"bold\" href={secRepo.url}>\n                      {secRepo.name}\n                    </ChakraLink>\n                    <Tag variant=\"subtle\" colorScheme=\"gray\">\n                      <TagLeftIcon as={FaStar} />\n                      <TagLabel>{secRepo.stargazerCount}</TagLabel>\n                    </Tag>\n                  </Flex>\n                  <Text>{secRepo.description}</Text>\n                </Box>\n              </Grid> */}\n              <Flex justifyContent=\"space-between\" flexWrap=\"wrap\">\n                {openSourceRepos.map((repo) => (\n                  <ChakraLink key={repo.url} href={repo.url} p={2}>\n                    {repo.name}\n                  </ChakraLink>\n                ))}\n              </Flex>\n            </Stack>\n          </Flex>\n        </Container>\n      </SkipNavContent>\n    </Layout>\n  )\n}\n\nexport default Index\n\nexport const query = graphql`\n  {\n    posts: allPost(filter: { published: { eq: true } }, sort: { fields: date, order: DESC }, limit: 4) {\n      nodes {\n        title\n        description\n        slug\n      }\n    }\n    garden: allGarden(\n      limit: 3\n      sort: { fields: lastUpdated, order: DESC }\n      filter: { slug: { ne: \"/garden/what-is-a-digital-garden\" } }\n    ) {\n      nodes {\n        title\n        slug\n      }\n    }\n  }\n`\n"],"names":["useSafeLayoutEffect","useMediaQuery","query","env","queries","Array","isArray","isSupported","window","_React$useState","map","matchMedia","matches","setMatches","mediaQueryList","listenerList","_","index","listener","mqlEvent","queryIndex","findIndex","mediaQuery","media","currentMatches","x","addEventListener","addListener","forEach","removeEventListener","removeListener","usePrefersReducedMotion","transforms","transform","transition","boxShadow","MotionBox","children","rest","shouldReduceMotion","_hover","PrimaryButton","to","isExternal","prefersReducedMotion","as","Link","undefined","href","variant","rightIcon","sx","span","svg","height","width","SubtleButton","colorScheme","textTransform","letterSpacing","fontSize","fontWeight","getTwitterShareLink","link","message","encodeURIComponent","TwitterButton","target","rel","size","ShareAnywhereButton","onClick","event","preventDefault","navigator","share","title","text","url","then","console","log","catch","error","Heading","space","paddingLarge","paddingMedium","paddingSmall","cardGradients","openSourceRepos","name","data","posts","nodes","firstPost","otherPosts","type","JSON","stringify","homepage","align","spacing","py","maxWidth","textAlign","alignItems","description","slug","direction","justifyContent","templateColumns","gap","item","key","borderRadius","textDecoration","bgGradient","p","display","color","textShadow","garden","gridTemplateColumns","verticalAlign","img","S","src","alt","layout","quality","formats","placeholder","aspectRatio","flexDirection","axis","flexWrap","repo"],"sourceRoot":""}