{"version":3,"file":"component---src-templates-garden-tsx-8000440f19b6d82f0f49.js","mappings":"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","sources":["webpack://www/../node_modules/@chakra-ui/tag/dist/chakra-ui-tag.esm.js","webpack://www/./src/templates/garden.tsx"],"sourcesContent":["import { Icon } from '@chakra-ui/icon';\nimport { forwardRef, useMultiStyleConfig, omitThemingProps, StylesProvider, chakra, useStyles } from '@chakra-ui/system';\nimport { __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar _excluded = [\"isDisabled\", \"children\"];\n\n/**\n * The tag component is used to label or categorize UI elements.\n * To style the tag globally, change the styles in `theme.components.Tag`\n * @see Docs https://chakra-ui.com/tag\n */\nvar Tag = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Tag\", props);\n  var ownProps = omitThemingProps(props);\n  var containerStyles = _extends({\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\"\n  }, styles.container);\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref\n  }, ownProps, {\n    __css: containerStyles\n  })));\n});\nif (__DEV__) {\n  Tag.displayName = \"Tag\";\n}\nvar TagLabel = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    isTruncated: true\n  }, props, {\n    __css: styles.label\n  }));\n});\nif (__DEV__) {\n  TagLabel.displayName = \"TagLabel\";\n}\nvar TagLeftIcon = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    verticalAlign: \"top\",\n    marginEnd: \"0.5rem\"\n  }, props));\n});\nif (__DEV__) {\n  TagLeftIcon.displayName = \"TagLeftIcon\";\n}\nvar TagRightIcon = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    verticalAlign: \"top\",\n    marginStart: \"0.5rem\"\n  }, props));\n});\nif (__DEV__) {\n  TagRightIcon.displayName = \"TagRightIcon\";\n}\nvar TagCloseIcon = function TagCloseIcon(props) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    verticalAlign: \"inherit\",\n    viewBox: \"0 0 512 512\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n  }));\n};\nif (__DEV__) {\n  TagCloseIcon.displayName = \"TagCloseIcon\";\n}\n\n/**\n * TagCloseButton is used to close \"remove\" the tag\n * @see Docs https://chakra-ui.com/tag\n */\nvar TagCloseButton = function TagCloseButton(props) {\n  var isDisabled = props.isDisabled,\n    children = props.children,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var styles = useStyles();\n  var btnStyles = _extends({\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    outline: \"0\"\n  }, styles.closeButton);\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({\n    \"aria-label\": \"close\"\n  }, rest, {\n    type: \"button\",\n    disabled: isDisabled,\n    __css: btnStyles\n  }), children || /*#__PURE__*/React.createElement(TagCloseIcon, null));\n};\nif (__DEV__) {\n  TagCloseButton.displayName = \"TagCloseButton\";\n}\nexport { Tag, TagCloseButton, TagLabel, TagLeftIcon, TagRightIcon };","import * as React from \"react\"\nimport { PageProps, graphql } from \"gatsby\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport { RiPlantFill as PlantIcon } from \"react-icons/ri\"\nimport {\n  Container,\n  Text,\n  Divider,\n  Flex,\n  Tag,\n  TagLabel,\n  Grid,\n  Box,\n  Link as ExternalLink,\n  Icon,\n  Stack,\n} from \"@chakra-ui/react\"\nimport { Layout } from \"../components/blocks/layout\"\nimport { Link } from \"../components/link\"\nimport { SkipNavContent } from \"../components/a11y/skip-nav\"\nimport { Prose } from \"../components/typography/prose\"\nimport { SEO } from \"../components/seo\"\nimport { Heading } from \"../components/typography/heading\"\nimport { Spacer } from \"../components/blocks/spacer\"\nimport { components } from \"../components/mdx\"\nimport { article } from \"../constants/json-ld\"\nimport { ShareAnywhereButton, TwitterButton } from \"../components/buttons\"\nimport { site } from \"../constants/meta\"\n\ntype DataProps = {\n  garden: {\n    title: string\n    slug: string\n    body: string\n    icon: string\n    seoLastUpdated: string\n    lastUpdated: string\n    seoDate: string\n    yearDate: string\n    date: string\n    tags: string[]\n    timeToRead: number\n    excerpt: string\n    parent: {\n      parent: {\n        relativePath: string\n      }\n    }\n  }\n}\n\nconst GardenTemplate: React.FC<PageProps<DataProps>> = ({ data: { garden }, location: { pathname } }) => {\n  const [hasShareApi, setHasShareApi] = React.useState(false)\n\n  React.useEffect(() => {\n    setHasShareApi(!!window.navigator.share)\n  }, [])\n  return (\n    <Layout>\n      <SEO title={garden.title} description={garden.excerpt} image=\"/social/digital-garden.png\">\n        <meta name=\"twitter:label1\" value=\"Time To Read\" />\n        <meta name=\"twitter:data1\" value={`${garden.timeToRead} Minutes`} />\n        <meta name=\"twitter:label2\" value=\"Category\" />\n        <meta name=\"twitter:data2\" value={garden.icon} />\n        <meta name=\"article:published_time\" content={garden.seoDate} />\n        <meta name=\"article:modified_time\" content={garden.seoLastUpdated} />\n        <script type=\"application/ld+json\">\n          {JSON.stringify(\n            article({\n              isGarden: true,\n              post: {\n                title: garden.title,\n                description: garden.excerpt,\n                slug: garden.slug,\n                image: `/social/digital-garden.png`,\n                date: garden.seoDate,\n                lastUpdated: garden.seoLastUpdated,\n                year: garden.yearDate,\n              },\n              category: {\n                name: `Digital Garden`,\n                slug: `/garden`,\n              },\n            })\n          )}\n        </script>\n      </SEO>\n      <Container variant=\"proseRoot\">\n        <SkipNavContent>\n          <Heading as=\"h1\">{garden.title}</Heading>\n          <Spacer size={6} axis=\"vertical\" />\n          <Divider />\n          <Spacer size={4} axis=\"vertical\" />\n          <Grid gridGap={2} gridTemplateColumns={[`1fr`, null, `1fr auto`]} fontSize={[`sm`, `md`, null, null, `lg`]}>\n            <Text>\n              Created {garden.date} – Last Updated {garden.lastUpdated}\n            </Text>\n            <Flex flexWrap=\"wrap\" justifyContent={[`flex-start`, null, `flex-end`]}>\n              {garden.tags.map((tag) => (\n                <Box as=\"span\" ml={2} _first={{ ml: 0 }} key={tag}>\n                  {tag}\n                </Box>\n              ))}\n            </Flex>\n            <Tag colorScheme=\"green\" justifySelf=\"flex-start\">\n              <TagLabel>\n                <Link to=\"/garden\">Digital Garden</Link>\n              </TagLabel>\n            </Tag>\n          </Grid>\n          <Spacer size={12} axis=\"vertical\" />\n          <Prose>\n            <MDXProvider components={components}>\n              <MDXRenderer>{garden.body}</MDXRenderer>\n            </MDXProvider>\n          </Prose>\n          <Spacer size={12} axis=\"vertical\" />\n          <Divider />\n          <Spacer size={6} axis=\"vertical\" />\n          <Stack\n            direction={[`column`, `row`]}\n            display=\"flex\"\n            spacing=\"5\"\n            justifyContent={[`flex-start`, `space-between`]}\n            alignItems={[`flex-start`, `center`]}\n          >\n            <Box>\n              {/* <ExternalLink\n                fontSize={[`md`, null, null, `1.125rem`]}\n                fontWeight=\"medium\"\n                href={`https://github.com/LekoArts/portfolio-v2/edit/main/www/content/garden/${garden.parent.parent.relativePath}`}\n              >\n                Edit on GitHub\n              </ExternalLink> */}\n              <ExternalLink\n                fontSize={[`md`, null, null, `1.125rem`]}\n                fontWeight=\"medium\"\n                href={`https://www.twitter.com/search?q=${encodeURIComponent(`https://www.amankalra.com${pathname}`)}`}\n              >\n                Discuss on Twitter\n              </ExternalLink>\n            </Box>\n            {hasShareApi ? (\n              <Stack direction={[`column`, `row`]}>\n                <ShareAnywhereButton link={`${site.url}${garden.slug}`} message={garden.title} />\n                <TwitterButton link={`${site.url}${garden.slug}`} message={garden.title} variant=\"outline\" />\n              </Stack>\n            ) : (\n              <TwitterButton link={`${site.url}${garden.slug}`} message={garden.title} />\n            )}\n          </Stack>\n          <Spacer size={12} axis=\"vertical\" />\n          <Box\n            textStyle=\"prominent\"\n            bgGradient=\"linear(to-tr, green.800, lime.600)\"\n            borderRadius=\"xl\"\n            p={6}\n            display=\"flex\"\n            flexDirection=\"row\"\n            alignItems=\"center\"\n            color=\"green.100\"\n            boxShadow=\"xl\"\n            textShadow=\"0px 2px 0px rgba(0, 0, 0, 0.35)\"\n          >\n            <Icon\n              as={PlantIcon}\n              height={[6, 8, 12]}\n              width={[6, 8, 12]}\n              mr={6}\n              color=\"lime.300\"\n              sx={{ filter: `drop-shadow(0px 3px 10px rgba(0, 0, 0, 0.25))` }}\n            />\n            <Box>\n              Want to learn more?{` `}\n              <Link to=\"/garden\" color=\"white\">\n                Browse my Digital Garden\n              </Link>\n            </Box>\n          </Box>\n        </SkipNavContent>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default GardenTemplate\n\nexport const query = graphql`\n  query GardenTemplate($slug: String!) {\n    garden(slug: { eq: $slug }) {\n      title\n      body\n      slug\n      icon\n      seoLastUpdated: lastUpdated\n      lastUpdated(formatString: \"MMM DD, YYYY\")\n      seoDate: date\n      date(formatString: \"MMM DD, YYYY\")\n      yearDate: date(formatString: \"YYYY\")\n      tags\n      timeToRead\n      excerpt\n      ... on MdxGarden {\n        parent {\n          ... on Mdx {\n            parent {\n              ... on File {\n                relativePath\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_excluded","Tag","props","ref","styles","ownProps","containerStyles","display","verticalAlign","alignItems","maxWidth","container","value","__css","displayName","TagLabel","isTruncated","label","TagLeftIcon","marginEnd","TagRightIcon","marginStart","TagCloseIcon","viewBox","fill","d","TagCloseButton","isDisabled","children","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","btnStyles","justifyContent","outline","closeButton","type","disabled","garden","data","pathname","location","React","hasShareApi","setHasShareApi","window","navigator","share","title","description","excerpt","image","name","timeToRead","icon","content","seoDate","seoLastUpdated","JSON","stringify","article","isGarden","post","slug","date","lastUpdated","year","yearDate","category","variant","as","size","axis","gridGap","gridTemplateColumns","fontSize","flexWrap","tags","map","tag","ml","_first","colorScheme","justifySelf","to","MDXProvider","components","MDXRenderer","body","direction","spacing","fontWeight","href","encodeURIComponent","link","site","message","textStyle","bgGradient","borderRadius","p","flexDirection","color","boxShadow","textShadow","PlantIcon","height","width","mr","sx","filter"],"sourceRoot":""}