{
    "componentChunkName": "component---src-templates-garden-tsx",
    "path": "/garden/running-cypress-tests-with-github-actions-in-parallel",
    "result": {"data":{"garden":{"title":"Running Cypress Tests with GitHub Actions in Parallel","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Running Cypress Tests with GitHub Actions in Parallel\",\n  \"date\": \"2021-09-03T00:00:00.000Z\",\n  \"lastUpdated\": \"2021-09-03T00:00:00.000Z\",\n  \"icon\": \"general\",\n  \"tags\": [\"Tooling\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Here\\u2019s a quick explanation and example of how you can run multiple Cypress tests in parallel using GitHub Action\\u2019s \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"matrix\"), \" feature and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"without\"), \" the need to use Cypress Dashboard.\"), mdx(\"p\", null, \"If you want to see a real-world application using this pattern, you can checkout my \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/LekoArts/gatsby-themes/blob/21ecb07e827de50f8ae02ae041cd569ab948b857/.github/workflows/e2e_testing.yml\"\n  }, \"gatsby-themes repository\"), \".\"), mdx(\"h2\", {\n    \"id\": \"prerequisites\"\n  }, \"Prerequisites\"), mdx(\"p\", null, \"Let\\u2019s say you use \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Create React App\"), \" (CRA) and have a small list of E2E tests that you want to run inside \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cypress/integration\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"cypress/\\n\\u251C\\u2500 integration/\\n\\u2502  \\u251C\\u2500 homepage.js\\n\\u2502  \\u251C\\u2500 contact-form.js\\n\\u2502  \\u251C\\u2500 seo.js\\n\")), mdx(\"p\", null, \"In order to run the tests you\\u2019ll need to build the CRA app, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://create-react-app.dev/docs/deployment\"\n  }, \"serve the app\"), \", and only then start Cypress.\"), mdx(\"h2\", {\n    \"id\": \"github-action-workflow\"\n  }, \"GitHub Action Workflow\"), mdx(\"p\", null, \"Set up the the workflow file and add the two jobs you need:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\",\n    \"metastring\": \"title=.github/workflows/e2e_testing.yml\",\n    \"title\": \".github/workflows/e2e_testing.yml\"\n  }, \"name: E2E Testing\\non: pull_request\\njobs:\\n  install:\\n    runs-on: ubuntu-latest\\n  e2e_tests:\\n    runs-on: ubuntu-latest\\n    needs: install\\n    container: cypress/browsers:node14.17.0-chrome91-ff89\\n\")), mdx(\"p\", null, \"You can adjust the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"on\"), \" trigger to your needs and change the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"container\"), \" (at the time of writing this it was the latest LTS image).\"), mdx(\"p\", null, \"Add the necessary checkout, Cypress action and build steps to the workflow:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\",\n    \"metastring\": \"title=.github/workflows/e2e_testing.yml {6-20,25-32}\",\n    \"title\": \".github/workflows/e2e_testing.yml\",\n    \"{6-20,25-32}\": true\n  }, \"name: E2E Testing\\non: pull_request\\njobs:\\n  install:\\n    runs-on: ubuntu-latest\\n    steps:\\n      - name: Checkout\\n        uses: actions/checkout@v2\\n      - name: Install\\n        uses: cypress-io/github-action@v2\\n        with:\\n          runTests: false\\n      - name: Run CRA Build\\n        run: yarn build\\n      - name: Save Cypress artifacts\\n        uses: actions/upload-artifact@v2\\n        with:\\n          name: build\\n          if-no-files-found: error\\n          path: build\\n  e2e_tests:\\n    runs-on: ubuntu-latest\\n    needs: install\\n    container: cypress/browsers:node14.17.0-chrome91-ff89\\n    steps:\\n      - name: Checkout\\n        uses: actions/checkout@v2\\n      - name: Download Cypress artifacts\\n        uses: actions/download-artifact@v2\\n        with:\\n          name: build\\n          path: build\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cypress-io/github-action@v2\"), \" action sets up Cypress, installs dependencies and caches them between runs. In the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"install\"), \" step it uses \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"runTests: false\"), \" since you only want to set up the container, not run tests just yet. With \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"actions/upload-artifact@v2\"), \" the output of CRA build is saved for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"e2e_tests\"), \" runs.\"), mdx(\"p\", null, \"In this last step you use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstrategymatrix\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"matrix\"), \" feature\"), \" to tell \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cypress-io/github-action@v2\"), \" to run each of your tests in parallel. This does not use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"parallel\"), \" option of the action itself but defines the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"spec\"), \" through the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"matrix\"), \" itself. The entries in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"matrix.containers\"), \" are the names of your files inside \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cypress/integration\"), \".\"), mdx(\"p\", null, \"Here\\u2019s the complete workflow file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\",\n    \"metastring\": \"title=.github/workflows/e2e_testing.yml {25-28,37-44}\",\n    \"title\": \".github/workflows/e2e_testing.yml\",\n    \"{25-28,37-44}\": true\n  }, \"name: E2E Testing\\non: pull_request\\njobs:\\n  install:\\n    runs-on: ubuntu-latest\\n    steps:\\n      - name: Checkout\\n        uses: actions/checkout@v2\\n      - name: Install\\n        uses: cypress-io/github-action@v2\\n        with:\\n          runTests: false\\n      - name: Run CRA Build\\n        run: yarn build\\n      - name: Save Cypress artifacts\\n        uses: actions/upload-artifact@v2\\n        with:\\n          name: build\\n          if-no-files-found: error\\n          path: build\\n  e2e_tests:\\n    runs-on: ubuntu-latest\\n    needs: install\\n    container: cypress/browsers:node14.17.0-chrome91-ff89\\n    strategy:\\n      fail-fast: false\\n      matrix:\\n        containers: [homepage, contact-form, seo]\\n    steps:\\n      - name: Checkout\\n        uses: actions/checkout@v2\\n      - name: Download Cypress artifacts\\n        uses: actions/download-artifact@v2\\n        with:\\n          name: build\\n          path: build\\n      - name: Cypress Test\\n        uses: cypress-io/github-action@v2\\n        with:\\n          spec: cypress/integration/${{ matrix.containers }}.js\\n          browser: chrome\\n          start: yarn start\\n        env:\\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/garden/running-cypress-tests-with-github-actions-in-parallel","icon":"general","seoLastUpdated":"2021-09-03T00:00:00.000Z","lastUpdated":"Sep 03, 2021","seoDate":"2021-09-03T00:00:00.000Z","date":"Sep 03, 2021","yearDate":"2021","tags":["Tooling"],"timeToRead":1,"excerpt":"Here's a quick explanation and example of how you can run multiple Cypress tests in parallel using GitHub Action's  matrix  feature andâ€¦","parent":{"parent":{"relativePath":"2021-09-03--running-cypress-tests-with-git-hub-actions-in-parallel/index.mdx"}}}},"pageContext":{"slug":"/garden/running-cypress-tests-with-github-actions-in-parallel"}},
    "staticQueryHashes": ["2299006781","3050858678","4184542181","712324210"]}