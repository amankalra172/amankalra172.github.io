{
    "componentChunkName": "component---src-templates-garden-tsx",
    "path": "/garden/specimens-for-gatsby-powered-design-systems",
    "result": {"data":{"garden":{"title":"Specimens for Gatsby powered Design Systems","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Specimens for Gatsby powered Design Systems\",\n  \"date\": \"2019-08-29T00:00:00.000Z\",\n  \"lastUpdated\": \"2021-04-21T00:00:00.000Z\",\n  \"icon\": \"gatsby\",\n  \"tags\": [\"Gatsby\", \"React\", \"MDX\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Some time ago I created a remark plugin for Gatsby called \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/LekoArts/gatsby-remark-design-system\"\n  }, \"gatsby-remark-design-system\"), \". It was my first deep-dive into remark and customizing the AST. It helped me a lot to understand Gatsby and remark plugins. It\\u2019s purpose is to display components such as color swatches, typography scales etc. in Markdown files. It works fine to this day, however it\\u2019s rather limited in its functionality and doesn\\u2019t stand a chance against MDX. Yeah, four years ago MDX wasn\\u2019t a thing, time flies!\"), mdx(\"p\", null, \"That\\u2019s why I created \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/LekoArts/gatsby-themes/tree/master/themes/gatsby-theme-specimens\"\n  }, \"@lekoarts/gatsby-theme-specimens\"), \"! It\\u2019s the MDX implementation of the old plugin. It exposes React components you can use in your Gatsby/React code (like usual) or in your MDX files \\u2014 the latter is really comfortable if you use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/LekoArts/gatsby-themes/tree/master/themes/gatsby-theme-specimens#mdx-shortcodes\"\n  }, \"MDX shortcodes\"), \". Head over to the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://specimens.lekoarts.de/\"\n  }, \"interactive preview\"), \" if you want to see it in action. The preview uses \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/FormidableLabs/react-live\"\n  }, \"react-live\"), \" hence you can customize the props/input as you want.\"), mdx(\"h2\", {\n    \"id\": \"installation--usage\"\n  }, \"Installation & Usage\"), mdx(\"p\", null, \"As with any other Gatsby theme you install it via npm/yarn:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"npm install @lekoarts/gatsby-theme-specimens\\n\")), mdx(\"p\", null, \"Add it to your config:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"title=gatsby-config.js {3-6}\",\n    \"title\": \"gatsby-config.js\",\n    \"{3-6}\": true\n  }, \"module.exports = {\\n  plugins: [\\n    {\\n      resolve: \\\"@lekoarts/gatsby-theme-specimens\\\",\\n      options: {},\\n    },\\n  ],\\n}\\n\")), mdx(\"p\", null, \"You can also use the preview page as a starter project, by using the Gatsby CLI (you need to install that first if you haven\\u2019t done so already):\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"gatsby new specimens LekoArts/gatsby-starter-specimens\\n\")), mdx(\"p\", null, \"The starter sets up the MDX shortcodes and interactive code blocks with react-live for you :) You don\\u2019t have to make them interactive, if you leave out the live prop they\\u2019ll just be syntax-highlighted code blocks.\"), mdx(\"p\", null, \"General usage is straightforward, you can import the components from the npm package, e.g. like:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import {\\n  Alert,\\n  Audio,\\n  BorderRadius,\\n  ColorFamilies,\\n  ColorRow,\\n  ColorSwatch,\\n  Download,\\n  FontFamily,\\n  FontSize,\\n  FontWeight,\\n  Heading,\\n  Palette,\\n  Shadow,\\n  Space,\\n  Table,\\n  Video,\\n} from \\\"@lekoarts/gatsby-theme-specimens\\\"\\n\")), mdx(\"p\", null, \"The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://specimens.lekoarts.de/\"\n  }, \"interactive preview\"), \" shows you how to use these components.\"), mdx(\"p\", null, \"Please follow the rest of the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/LekoArts/gatsby-themes/tree/master/themes/gatsby-theme-specimens#usage\"\n  }, \"usage instructions\"), \" in the README and let me know (with an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/LekoArts/gatsby-themes/issues/new/choose\"\n  }, \"issue\"), \") how it can be improved!\"), mdx(\"h3\", {\n    \"id\": \"other-components\"\n  }, \"Other components?\"), mdx(\"p\", null, \"The currently implemented components are definitely not the end, I plan on integrating some other components in the future. If you have something specific in mind, please open a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/LekoArts/gatsby-themes/issues/new?assignees=&labels=type%3A+enhancement&template=feature-request.md&title=\"\n  }, \"feature request\"), \", and we can discuss. Thanks!\"), mdx(\"h2\", {\n    \"id\": \"why-a-gatsby-theme-tho\"\n  }, \"Why a Gatsby theme tho?\"), mdx(\"p\", null, \"You might ask yourself why I didn\\u2019t publish it as a normal npm package that exposes React components instead of a Gatsby theme.\"), mdx(\"p\", null, \"It\\u2019s because Gatsby themes have the powerful shadowing feature which will allow you to edit parts of theme to your liking. In this case you have two possibilities: Shadow the components itself (to create a new structure for example) or use Theme UI to change styles. By creating a file in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/gatsby-plugin-theme-ui/index.js\"), \" you\\u2019re shadowing the Theme UI config of the theme and can use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/LekoArts/gatsby-themes/tree/master/themes/gatsby-theme-specimens#modifications\"\n  }, \"variants for example\"), \" to change individual designs. This works because the theme uses Theme UI under the hood.\"), mdx(\"p\", null, \"It also makes it possible to accept options (such as contrastGuidelines etc.) and apply them to multiple components or functions. In my opinion it can\\u2019t get any easier than that to expose options.\"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/garden/specimens-for-gatsby-powered-design-systems","icon":"gatsby","seoLastUpdated":"2021-04-21T00:00:00.000Z","lastUpdated":"Apr 21, 2021","seoDate":"2019-08-29T00:00:00.000Z","date":"Aug 29, 2019","yearDate":"2019","tags":["Gatsby","React","MDX"],"timeToRead":2,"excerpt":"Some time ago I created a remark plugin for Gatsby called  gatsby-remark-design-system . It was my first deep-dive into remark andâ€¦","parent":{"parent":{"relativePath":"2019-08-29--specimens-for-gatsby-powered-design-systems/index.mdx"}}}},"pageContext":{"slug":"/garden/specimens-for-gatsby-powered-design-systems"}},
    "staticQueryHashes": ["2299006781","3050858678","4184542181","712324210"]}