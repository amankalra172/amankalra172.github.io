{"version":3,"file":"component---src-pages-category-name-tsx-4197e822b7afd6b13f3b.js","mappings":"2KAAA,SAASA,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,IAGOS,MAAMC,KAAMR,WAG9B,SAASS,EAA8BP,EAAQQ,GAC7C,GAAc,MAAVR,EAAgB,MAAO,GAC3B,IAEIC,EAAKJ,EAFLD,EAAS,GACTa,EAAaf,OAAOgB,KAAKV,GAG7B,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IACjCI,EAAMQ,EAAWZ,GACbW,EAASG,QAAQV,IAAQ,IAC7BL,EAAOK,GAAOD,EAAOC,IAGvB,OAAOL,EAeF,IAAIgB,GAAoB,QAAW,SAAUC,EAAOC,GACzD,IAAIC,EAAOF,EAAME,KACbC,EAAgBH,EAAMG,cACtBC,EAAMJ,EAAMI,IACZC,EAASL,EAAMK,OACfC,EAAYN,EAAMM,UAClBC,EAASP,EAAMO,OACfC,EAAMR,EAAMQ,IACZC,EAAWT,EAAMS,SACjBC,EAAWV,EAAMU,SACjBC,EAAeX,EAAMW,aACrBC,EAAcZ,EAAMY,YACpBC,EAAkBb,EAAMa,gBACxBC,EAAOpB,EAA8BM,EAAO,CAAC,OAAQ,gBAAiB,MAAO,SAAU,YAAa,SAAU,MAAO,WAAY,WAAY,eAAgB,cAAe,oBAE5Ke,EAAS,CACXC,QAAS,OACTC,SAAUf,EACVgB,kBAAmBf,EACnBgB,QAASf,EACTgB,WAAYf,EACZgB,cAAef,EACfgB,gBAAiBV,EACjBW,WAAYhB,EACZiB,QAAShB,EACTiB,aAAchB,EACdiB,aAAchB,EACdiB,iBAAkBhB,EAClBiB,oBAAqBf,GAEvB,OAAoB,gBAAoB,SAAYjC,EAAS,CAC3DqB,IAAKA,EACL4B,MAAOd,GACND,OAGD,OACFf,EAAK+B,YAAc,S,+HClFrB,SAASlD,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,IAGOS,MAAMC,KAAMR,WAqBvB,IAAI8C,GAAuB,QAAW,SAAU/B,EAAOC,GAC5D,IAAIc,GAAS,OAAe,UAAWf,GAGnCc,EAtBN,SAAuC3B,EAAQQ,GAC7C,GAAc,MAAVR,EAAgB,MAAO,GAC3B,IAEIC,EAAKJ,EAFLD,EAAS,GACTa,EAAaf,OAAOgB,KAAKV,GAG7B,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IACjCI,EAAMQ,EAAWZ,GACbW,EAASG,QAAQV,IAAQ,IAC7BL,EAAOK,GAAOD,EAAOC,IAGvB,OAAOL,EAUIW,EADa,QAAiBM,GACmB,CAAC,cAE7D,OAAoB,gBAAoB,QAAWpB,EAAS,CAC1DqB,IAAKA,EACL+B,WAAW,IAAAC,IAAG,iBAAkBjC,EAAMgC,YACrClB,EAAM,CACPe,MAAOd,QAIP,OACFgB,EAAQD,YAAc,Y,wICnDxB,SAASlD,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,IAGOS,MAAMC,KAAMR,WA2BvB,IAAIiD,GAAoB,QAAW,SAAUlC,EAAOC,GACzD,IAAIc,GAAS,OAAe,OAAQf,GAGhCc,EA5BN,SAAuC3B,EAAQQ,GAC7C,GAAc,MAAVR,EAAgB,MAAO,GAC3B,IAEIC,EAAKJ,EAFLD,EAAS,GACTa,EAAaf,OAAOgB,KAAKV,GAG7B,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IACjCI,EAAMQ,EAAWZ,GACbW,EAASG,QAAQV,IAAQ,IAC7BL,EAAOK,GAAOD,EAAOC,IAGvB,OAAOL,EAgBIW,EADa,QAAiBM,GACmB,CAAC,YAAa,QAAS,aAAc,WAE7FmC,GAAe,QAAgB,CACjCC,UAAWpC,EAAMqC,MACjBC,eAAgBtC,EAAMuC,WACtBC,cAAexC,EAAMyC,SAEvB,OAAoB,gBAAoB,OAAU7D,EAAS,CACzDqB,IAAKA,EACL+B,WAAW,IAAAC,IAAG,cAAejC,EAAMgC,YAClCG,EAAcrB,EAAM,CACrBe,MAAOd,QAIP,OACFmB,EAAKJ,YAAc,S,iGC1DjBY,EAAsB,KAAY,kBAAwB,YCEvD,SAASC,IACd,IDI4BC,EACxBC,EACAC,EACAC,EAEAC,EAGAC,EACAC,EACAC,ECdAC,GDIwBR,ECJO,mCDK/BC,GAAM,SACNC,EAAUO,MAAMC,QAAQV,GAASA,EAAQ,CAACA,GAC1CG,EAAc,MAAa,eAAgBF,EAAIU,OAE/CP,EAAkB,WAAeF,EAAQU,KAAI,SAAUZ,GACzD,QAAOG,KAAgBF,EAAIU,OAAOE,WAAWb,GAAOM,YAElDD,GAAmB,OAAeD,EAAiB,GACnDE,EAAUD,EAAiB,GAC3BE,EAAaF,EAAiB,GAElCP,GAAoB,WAClB,GAAKK,EAAL,CACA,IAAIW,EAAiBZ,EAAQU,KAAI,SAAUZ,GACzC,OAAOC,EAAIU,OAAOE,WAAWb,MAE3Be,EAAeD,EAAeF,KAAI,SAAUI,EAAYC,GAC1D,IAAIC,EAAW,WACb,OAAOX,GAAW,SAAUY,GAC1B,OAAOA,EAAKP,KAAI,SAAUQ,EAAWC,GACnC,OAAOJ,IAAUI,IAAQL,EAAWV,QAAUc,SAMpD,OADAJ,EAAWM,YAAYJ,GAChBA,KAET,OAAO,WACLJ,EAAeS,SAAQ,SAAUP,EAAYC,GAC3CD,EAAWQ,eAAeT,EAAaE,WAG1C,CAACjB,IACGM,GCnCP,OAHsB,OAAeE,EAAgB,GACV,K,gGCThCiB,EACE,CACXC,UAAU,uBACVC,WAAW,uGAHFF,EAKF,CACPC,UAAU,0BACVE,UAAU,6E,eCHDC,EAAgC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAa5D,GAAW,YAChE6D,GAAqBhC,EAAAA,EAAAA,KAE3B,OACE,gBAAC,KAAD,eACE4B,WAAYF,EAAuBE,WACnCD,UAAWD,EAAuBC,UAClCM,OACED,EAAqB,GAAK,CAAEL,UAAWD,EAAmBC,UAAWE,UAAWH,EAAmBG,YAEjG1D,GAEH4D,K,0GCLM3C,EAAkC,SAAC,GAAD,IAAG8C,EAAH,EAAGA,GAAIH,EAAP,EAAOA,SAAa5D,GAApB,mBAC7C,gBAAC,IAAD,eAAe+D,GAAIA,EAAIC,QAASD,GAAQ/D,GACrC4D,K,0GCAQK,EAA4B,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC3DC,GAASC,EAAAA,EAAAA,mBAAkB,eAAD,qBAC1BC,GAAeD,EAAAA,EAAAA,mBAAkB,QAAD,SAChCE,GAAoBF,EAAAA,EAAAA,mBAAkB,gBAAD,sBACrCG,GAAkBH,EAAAA,EAAAA,mBAAkB,uBAAD,6BAEzC,OACE,gBAAC,IAAD,CAAWI,EAAG,EAAGC,aAAa,KAAKlB,UAAU,KAAKmB,GAAIP,EAAQhG,IAAK4F,EAAMY,aAAc,CAAEpB,UAAU,YACjG,gBAAC,IAAD,CACEqB,GAAIb,EACJc,OAAQ,CAAEtB,UAAU,OAASuB,GAAI,CAAEC,MAAOT,IAC1CX,OAAQ,CAAEtC,eAAe,OAASyD,GAAI,CAAEC,MAAOT,KAE/C,gBAAC,IAAD,CAAMV,GAAG,KAAKoB,SAAS,YAAYC,WAAW,OAAOF,MAAOV,EAAcf,WAAW,0BAClFU,GAEFC,GACC,gBAAC,IAAD,CAAML,GAAG,KAAKoB,SAAS,WAAWC,WAAW,SAASF,MAAOR,GAC1DN,GAGL,gBAAC,IAAD,CAAMiB,GAAI,GAAIhB,O,wICrBTiB,EAA4C,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYpB,EAAf,EAAeA,MAAOE,EAAtB,EAAsBA,YAAtB,IAAmCmB,MAAAA,OAAnC,WAA2CC,EAA3C,SACvD,gBAAC,KAAD,CAAKJ,GAAG,2BAA2BE,WAAYA,EAAYG,GAAG,2BAC5D,gBAAC,IAAD,CAAWC,GAAIC,EAAAA,EAAAA,cACb,gBAAC,IAAD,CAAM7F,gBAAgB,OAAOT,IAAK,IAChC,gBAAC,IAAD,CAAMuG,UAAU,UACd,gBAAC,IAAD,CAAS9B,GAAG,KAAKmB,MAAM,SACpBf,GAEH,gBAAC,IAAD,CAAM2B,UAAU,YAAYZ,MAAM,WAAWa,SAAS,QACnD1B,IAGJmB,O,4JCLIQ,EAA4C,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOrC,EAAV,EAAUA,SAAV,OACvD,gBAAC,IAAD,CAAQsC,cAAe,gBAAC,IAAD,OACrB,gBAAC,IAAD,KACGtC,EACD,gBAAC,IAAD,CAAW+B,GAAIC,EAAAA,EAAAA,eACZK,EAAME,MAAM/H,OAAS,EACpB,gBAAC,IAAD,CAAM0C,oBAAqB,CAAC,MAAO,KAAR,kBAAiCxB,IAAK,EAAG8G,GAAI,CAAC,IAAK,KAAM,KAAZ,OACrEH,EAAME,MAAMzD,KAAI,SAAC2D,GAAD,OACf,gBAAC,IAAD,CACE/H,IAAK+H,EAAKnC,KACVA,KAAMmC,EAAKnC,KACXC,MAAOkC,EAAKlC,MACZC,SAAUiC,EAAKjC,SACfC,YAAagC,EAAKhC,kBAKxB,gBAAC,IAAD,CAAMyB,UAAU,aAAhB,wFAEE,gBAAC,IAAD,CAAcQ,KAAK,mCAAnB,WAFF,0D,qHCjCGC,EAAiC,WAC5C,IAAMC,GCMOC,EAAAA,EAAAA,gBAAc,cAWfC,YAAYP,MDhBlBQ,GAAcpC,EAAAA,EAAAA,mBAAkB,eAAD,gBAC/BqC,GAAUrC,EAAAA,EAAAA,mBAAkB,eAAD,gBAEjC,OACE,gBAAC,IAAD,CACEsC,WAAW,SACXlB,GAAG,IACH,YAAU,gBACVmB,GAAI,CACFC,UAAU,OACVC,UAAU,SACVC,eAAe,OACfC,eAAmBN,EAAL,IAAgBD,EAC9B,sBAAuB,CACrBQ,OAAO,QAET,4BAA6B,CAC3BC,WAAYT,EACZ/B,aAAa,OAEf,4BAA6B,CAC3ByC,gBAAiBT,EACjBhC,aAAa,MACb0C,YAAY,MACZC,YAAY,QACZC,YAAab,KAIjB,gBAAC,KAAD,CAAQ5C,GAAG,KAAK0D,cAAc,OAAOC,QAAQ,IAAIC,GAAG,MAClD,0BACE,gBAAC,IAAD,CACE5C,GAAG,WACHI,SAAS,KACTR,EAAE,IACFiD,gBAAgB,SAChBd,GAAI,CAAE,WAAY,CAAE1B,WAAW,cALjC,WAUF,0BACE,gBAAC,IAAD,CACEL,GAAG,aACHI,SAAS,KACTR,EAAE,IACFiD,gBAAgB,SAChBd,GAAI,CAAE,WAAY,CAAE1B,WAAW,cALjC,cAUDoB,EAAW9D,KAAI,SAACmF,GAAD,OACd,sBAAIvJ,IAAKuJ,EAAK3D,MACZ,gBAAC,IAAD,CACEa,GAAI8C,EAAK3D,KACTiB,SAAS,KACTR,EAAE,IACFiD,gBAAgB,SAChBd,GAAI,CAAE,WAAY,CAAE1B,WAAW,cAE9ByC,EAAKC,c,qDEpEb,IAAMlC,EAAQ,CACnBmC,aAAc,CAAC,GAAI,GAAI,KAAM,GAAI,IACjCC,cAAe,CAAC,GAAI,GAAI,KAAM,GAAI,IAClCC,aAAc,CAAC,GAAI,GAAI,KAAM,GAAI,M,wECiCnC,UAXuD,SAAC,GAAD,QAAGC,KAAQjC,EAAX,EAAWA,MAAOkC,EAAlB,EAAkBA,SAAlB,OACrD,gBAAC,IAAD,CAAclC,MAAOA,GACnB,gBAAC,IAAD,CACE9B,MAAOgE,EAASL,KAChBzD,YAAa8D,EAAS9D,YACtB+D,oBAAqB,CAAC,CAAEN,KAAMK,EAASL,KAAMO,IAAKF,EAASjE,SAE7D,gBAAC,IAAD,CAAcqB,WAAY4C,EAASG,SAAUnE,MAAOgE,EAASL,KAAMzD,YAAa8D,EAAS9D","sources":["webpack://www/../node_modules/@chakra-ui/layout/dist/esm/grid.js","webpack://www/../node_modules/@chakra-ui/layout/dist/esm/heading.js","webpack://www/../node_modules/@chakra-ui/layout/dist/esm/text.js","webpack://www/../node_modules/@chakra-ui/media-query/dist/esm/use-media-query.js","webpack://www/../node_modules/@chakra-ui/media-query/dist/esm/media-query.hook.js","webpack://www/./src/constants/motion.ts","webpack://www/./src/components/blocks/motion-box.tsx","webpack://www/./src/components/typography/heading.tsx","webpack://www/./src/components/writing/card.tsx","webpack://www/./src/components/writing/category-hero.tsx","webpack://www/./src/components/writing/category-view.tsx","webpack://www/./src/components/writing/subnavigation.tsx","webpack://www/./src/hooks/use-categories.tsx","webpack://www/./src/constants/space.ts","webpack://www/./src/pages/{Category.name}.tsx"],"sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { filterUndefined, mapResponsive, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/grid\n */\n\nexport var Grid = /*#__PURE__*/forwardRef(function (props, ref) {\n  var area = props.area,\n      templateAreas = props.templateAreas,\n      gap = props.gap,\n      rowGap = props.rowGap,\n      columnGap = props.columnGap,\n      column = props.column,\n      row = props.row,\n      autoFlow = props.autoFlow,\n      autoRows = props.autoRows,\n      templateRows = props.templateRows,\n      autoColumns = props.autoColumns,\n      templateColumns = props.templateColumns,\n      rest = _objectWithoutPropertiesLoose(props, [\"area\", \"templateAreas\", \"gap\", \"rowGap\", \"columnGap\", \"column\", \"row\", \"autoFlow\", \"autoRows\", \"templateRows\", \"autoColumns\", \"templateColumns\"]);\n\n  var styles = {\n    display: \"grid\",\n    gridArea: area,\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});\n\nif (__DEV__) {\n  Grid.displayName = \"Grid\";\n}\n\nfunction spanFn(span) {\n  return mapResponsive(span, function (value) {\n    return value === \"auto\" ? \"auto\" : \"span \" + value + \"/span \" + value;\n  });\n}\n\nexport var GridItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var colSpan = props.colSpan,\n      colStart = props.colStart,\n      colEnd = props.colEnd,\n      rowEnd = props.rowEnd,\n      rowSpan = props.rowSpan,\n      rowStart = props.rowStart,\n      rest = _objectWithoutPropertiesLoose(props, [\"colSpan\", \"colStart\", \"colEnd\", \"rowEnd\", \"rowSpan\", \"rowStart\"]);\n\n  var styles = filterUndefined({\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nexport var Heading = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Heading\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"className\"]);\n\n  return /*#__PURE__*/React.createElement(chakra.h2, _extends({\n    ref: ref,\n    className: cx(\"chakra-heading\", props.className)\n  }, rest, {\n    __css: styles\n  }));\n});\n\nif (__DEV__) {\n  Heading.displayName = \"Heading\";\n}","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__, filterUndefined } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/text\n */\n\nexport var Text = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Text\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"className\", \"align\", \"decoration\", \"casing\"]);\n\n  var aliasedProps = filterUndefined({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /*#__PURE__*/React.createElement(chakra.p, _extends({\n    ref: ref,\n    className: cx(\"chakra-text\", props.className)\n  }, aliasedProps, rest, {\n    __css: styles\n  }));\n});\n\nif (__DEV__) {\n  Text.displayName = \"Text\";\n}","import _slicedToArray from \"/home/runner/work/amankalra172.github.io/amankalra172.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEnvironment } from \"@chakra-ui/react-env\";\nimport { isBrowser } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\n\nexport function useMediaQuery(query) {\n  var env = useEnvironment();\n  var queries = Array.isArray(query) ? query : [query];\n  var isSupported = isBrowser && \"matchMedia\" in env.window;\n\n  var _React$useState = React.useState(queries.map(function (query) {\n    return isSupported ? !!env.window.matchMedia(query).matches : false;\n  })),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      matches = _React$useState2[0],\n      setMatches = _React$useState2[1];\n\n  useSafeLayoutEffect(function () {\n    if (!isSupported) return undefined;\n    var mediaQueryList = queries.map(function (query) {\n      return env.window.matchMedia(query);\n    });\n    var listenerList = mediaQueryList.map(function (mediaQuery, index) {\n      var listener = function listener() {\n        return setMatches(function (prev) {\n          return prev.map(function (prevValue, idx) {\n            return index === idx ? !!mediaQuery.matches : prevValue;\n          });\n        });\n      };\n\n      mediaQuery.addListener(listener);\n      return listener;\n    });\n    return function () {\n      mediaQueryList.forEach(function (mediaQuery, index) {\n        mediaQuery.removeListener(listenerList[index]);\n      });\n    };\n  }, [query]);\n  return matches;\n}","import _slicedToArray from \"/home/runner/work/amankalra172.github.io/amankalra172.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useMediaQuery } from \"./use-media-query\";\n/**\n * React hook used to get the user's animation preference.\n */\n\nexport function usePrefersReducedMotion() {\n  var _useMediaQuery = useMediaQuery(\"(prefers-reduced-motion: reduce)\"),\n      _useMediaQuery2 = _slicedToArray(_useMediaQuery, 1),\n      prefersReducedMotion = _useMediaQuery2[0];\n\n  return prefersReducedMotion;\n}\n/**\n * React hook for getting the user's color mode preference.\n */\n\nexport function useColorModePreference() {\n  var _useMediaQuery3 = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"]),\n      _useMediaQuery4 = _slicedToArray(_useMediaQuery3, 2),\n      isDark = _useMediaQuery4[0],\n      isLight = _useMediaQuery4[1];\n\n  if (isLight) return \"light\";\n  if (isDark) return \"dark\";\n  return undefined;\n}","export const transforms = {\n  beforeHover: {\n    transform: `translate3d(0, 0, 0)`,\n    transition: `transform 0.4s cubic-bezier(0.34, 1.56, 0.64, 1), box-shadow 0.4s cubic-bezier(0.34, 1.56, 0.64, 1)`,\n  },\n  onHover: {\n    transform: `translate3d(0, -8px, 0)`,\n    boxShadow: `0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)`,\n  },\n}\n","import * as React from \"react\"\nimport { Box, BoxProps, usePrefersReducedMotion } from \"@chakra-ui/react\"\nimport { transforms } from \"../../constants/motion\"\n\nexport const MotionBox: React.FC<BoxProps> = ({ children, ...rest }) => {\n  const shouldReduceMotion = usePrefersReducedMotion()\n\n  return (\n    <Box\n      transition={transforms.beforeHover.transition}\n      transform={transforms.beforeHover.transform}\n      _hover={\n        shouldReduceMotion ? {} : { transform: transforms.onHover.transform, boxShadow: transforms.onHover.boxShadow }\n      }\n      {...rest}\n    >\n      {children}\n    </Box>\n  )\n}\n","import * as React from \"react\"\nimport { Heading as ChakraHeading, HeadingProps as ChakraHeadingProps } from \"@chakra-ui/react\"\n\ninterface HeadingProps extends ChakraHeadingProps {\n  as: \"h1\" | \"h2\" | \"h3\" | \"h4\"\n}\n\n/**\n * Heading component accepting heading levels\n * Wraps the Heading component from Chakra\n */\nexport const Heading: React.FC<HeadingProps> = ({ as, children, ...rest }) => (\n  <ChakraHeading as={as} variant={as} {...rest}>\n    {children}\n  </ChakraHeading>\n)\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Text, useColorModeValue } from \"@chakra-ui/react\"\nimport { MotionBox } from \"../blocks/motion-box\"\nimport { Link } from \"../link\"\n\ntype CardProps = {\n  slug: string\n  title: string\n  subtitle?: string\n  description: string\n}\n\nexport const Card: React.FC<CardProps> = ({ slug, title, subtitle, description }) => {\n  const cardBg = useColorModeValue(`brand.cardBg`, `brand.dark.cardBg`)\n  const headingColor = useColorModeValue(`black`, `white`)\n  const headingHoverColor = useColorModeValue(`brand.primary`, `brand.dark.primary`)\n  const subheadingColor = useColorModeValue(`brand.cardSubheading`, `brand.dark.cardSubheading`)\n\n  return (\n    <MotionBox p={6} borderRadius=\"lg\" boxShadow=\"lg\" bg={cardBg} key={slug} _focusWithin={{ boxShadow: `outline` }}>\n      <Link\n        to={slug}\n        _focus={{ boxShadow: `none`, h2: { color: headingHoverColor } }}\n        _hover={{ textDecoration: `none`, h2: { color: headingHoverColor } }}\n      >\n        <Text as=\"h2\" fontSize=\"1.3125rem\" fontWeight=\"bold\" color={headingColor} transition=\"color 0.3s ease-in-out\">\n          {title}\n        </Text>\n        {subtitle && (\n          <Text as=\"h3\" fontSize=\"1.125rem\" fontWeight=\"medium\" color={subheadingColor}>\n            {subtitle}\n          </Text>\n        )}\n        <Text mt={6}>{description}</Text>\n      </Link>\n    </MotionBox>\n  )\n}\n\nexport const query = graphql`\n  fragment CardPostInformation on Post {\n    title\n    date\n    slug\n    subtitle\n    description\n  }\n`\n","import * as React from \"react\"\nimport { Box, Container, Flex, Text, Grid } from \"@chakra-ui/react\"\nimport { BackgroundProps } from \"@chakra-ui/system\"\nimport { space } from \"../../constants/space\"\nimport { Heading } from \"../typography/heading\"\n\ntype CategoryHeroProps = {\n  bgGradient: BackgroundProps[\"bgGradient\"]\n  title: string\n  description: React.ReactNode\n  image?: React.ReactNode\n}\n\nexport const CategoryHero: React.FC<CategoryHeroProps> = ({ bgGradient, title, description, image = undefined }) => (\n  <Box mt=\"-navigationWithSubHeight\" bgGradient={bgGradient} pt=\"navigationWithSubHeight\">\n    <Container py={space.paddingSmall}>\n      <Grid templateColumns=\"auto\" gap={12}>\n        <Flex direction=\"column\">\n          <Heading as=\"h1\" color=\"white\">\n            {title}\n          </Heading>\n          <Text textStyle=\"prominent\" color=\"gray.100\" maxWidth=\"65ch\">\n            {description}\n          </Text>\n        </Flex>\n        {image}\n      </Grid>\n    </Container>\n  </Box>\n)\n","import * as React from \"react\"\nimport { Container, Grid, Text, Link as ExternalLink } from \"@chakra-ui/react\"\nimport { space } from \"../../constants/space\"\nimport { SkipNavContent } from \"../a11y/skip-nav\"\nimport { Layout } from \"../blocks/layout\"\nimport { Card } from \"./card\"\nimport { WritingSubNavigation } from \"./subnavigation\"\n\ntype CategoryViewProps = {\n  posts: {\n    nodes: {\n      title: string\n      date: string\n      slug: string\n      subtitle: string\n      description: string\n    }[]\n  }\n}\n\nexport const CategoryView: React.FC<CategoryViewProps> = ({ posts, children }) => (\n  <Layout subnavigation={<WritingSubNavigation />}>\n    <SkipNavContent>\n      {children}\n      <Container py={space.paddingMedium}>\n        {posts.nodes.length > 0 ? (\n          <Grid gridTemplateColumns={[`1fr`, null, `repeat(2, 1fr)`]} gap={8} mx={[`0`, null, null, `-6`]}>\n            {posts.nodes.map((post) => (\n              <Card\n                key={post.slug}\n                slug={post.slug}\n                title={post.title}\n                subtitle={post.subtitle}\n                description={post.description}\n              />\n            ))}\n          </Grid>\n        ) : (\n          <Text textStyle=\"prominent\">\n            Sadly there's no content for this category available yet. Be sure to follow me on{` `}\n            <ExternalLink href=\"https://twitter.com/lekoarts_de\">Twitter</ExternalLink> to not miss any announcements\n            about new posts :)\n          </Text>\n        )}\n      </Container>\n    </SkipNavContent>\n  </Layout>\n)\n","import * as React from \"react\"\nimport { Flex, HStack, useColorModeValue } from \"@chakra-ui/react\"\nimport { useCategories } from \"../../hooks/use-categories\"\nimport { Link } from \"../link\"\n\nexport const WritingSubNavigation: React.FC = () => {\n  const categories = useCategories()\n  const scrollbarBG = useColorModeValue(`blueGray.200`, `blueGray.700`)\n  const thumbBG = useColorModeValue(`blueGray.400`, `blueGray.400`)\n\n  return (\n    <Flex\n      alignItems=\"center\"\n      py=\"2\"\n      data-name=\"subnavigation\"\n      sx={{\n        overflowX: `auto`,\n        overflowY: `hidden`,\n        scrollbarWidth: `thin`,\n        scrollbarColor: `${thumbBG} ${scrollbarBG}`,\n        \"::-webkit-scrollbar\": {\n          height: `12px`,\n        },\n        \"::-webkit-scrollbar-track\": {\n          background: scrollbarBG,\n          borderRadius: `6px`,\n        },\n        \"::-webkit-scrollbar-thumb\": {\n          backgroundColor: thumbBG,\n          borderRadius: `8px`,\n          borderWidth: `3px`,\n          borderStyle: `solid`,\n          borderColor: scrollbarBG,\n        },\n      }}\n    >\n      <HStack as=\"ul\" listStyleType=\"none\" spacing=\"2\" ml=\"-2\">\n        <li>\n          <Link\n            to=\"/writing\"\n            fontSize=\"md\"\n            p=\"2\"\n            activeClassName=\"active\"\n            sx={{ \"&.active\": { fontWeight: `semibold` } }}\n          >\n            Latest\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/tutorials\"\n            fontSize=\"md\"\n            p=\"2\"\n            activeClassName=\"active\"\n            sx={{ \"&.active\": { fontWeight: `semibold` } }}\n          >\n            Tutorials\n          </Link>\n        </li>\n        {categories.map((item) => (\n          <li key={item.slug}>\n            <Link\n              to={item.slug}\n              fontSize=\"md\"\n              p=\"2\"\n              activeClassName=\"active\"\n              sx={{ \"&.active\": { fontWeight: `semibold` } }}\n            >\n              {item.name}\n            </Link>\n          </li>\n        ))}\n      </HStack>\n    </Flex>\n  )\n}\n","import { graphql, useStaticQuery } from \"gatsby\"\n\ntype CategoryQueryResult = {\n  allCategory: {\n    nodes: {\n      name: string\n      slug: string\n    }[]\n  }\n}\n\nexport const useCategories = () => {\n  const data = useStaticQuery<CategoryQueryResult>(graphql`\n    {\n      allCategory(sort: { fields: name, order: ASC }) {\n        nodes {\n          name\n          slug\n        }\n      }\n    }\n  `)\n\n  return data.allCategory.nodes\n}\n","export const space = {\n  paddingLarge: [20, 24, null, 40, 48],\n  paddingMedium: [16, 24, null, 36, 40],\n  paddingSmall: [12, 16, null, 24, 28],\n}\n","import * as React from \"react\"\nimport { PageProps, graphql } from \"gatsby\"\nimport { CategoryHero } from \"../components/writing/category-hero\"\nimport { CategoryView } from \"../components/writing/category-view\"\nimport { SEO } from \"../components/seo\"\n\ntype ReactProps = {\n  posts: {\n    nodes: {\n      title: string\n      date: string\n      slug: string\n      subtitle: string\n      description: string\n    }[]\n    totalCount: number\n  }\n  category: {\n    name: string\n    description: string\n    gradient: string\n    slug: string\n  }\n}\n\nconst ReactCategory: React.FC<PageProps<ReactProps>> = ({ data: { posts, category } }) => (\n  <CategoryView posts={posts}>\n    <SEO\n      title={category.name}\n      description={category.description}\n      breadcrumbListItems={[{ name: category.name, url: category.slug }]}\n    />\n    <CategoryHero bgGradient={category.gradient} title={category.name} description={category.description} />\n  </CategoryView>\n)\n\nexport default ReactCategory\n\nexport const query = graphql`\n  query ($name: String!) {\n    category(name: { eq: $name }) {\n      name\n      description\n      gradient\n      slug\n    }\n    posts: allPost(\n      filter: { published: { eq: true }, category: { name: { eq: $name } } }\n      sort: { fields: date, order: DESC }\n    ) {\n      nodes {\n        ...CardPostInformation\n      }\n      totalCount\n    }\n  }\n`\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","Grid","props","ref","area","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","styles","display","gridArea","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","__css","displayName","Heading","className","cx","Text","aliasedProps","textAlign","align","textDecoration","decoration","textTransform","casing","useSafeLayoutEffect","usePrefersReducedMotion","query","env","queries","isSupported","_React$useState","_React$useState2","matches","setMatches","_useMediaQuery","Array","isArray","window","map","matchMedia","mediaQueryList","listenerList","mediaQuery","index","listener","prev","prevValue","idx","addListener","forEach","removeListener","transforms","transform","transition","boxShadow","MotionBox","children","shouldReduceMotion","_hover","as","variant","Card","slug","title","subtitle","description","cardBg","useColorModeValue","headingColor","headingHoverColor","subheadingColor","p","borderRadius","bg","_focusWithin","to","_focus","h2","color","fontSize","fontWeight","mt","CategoryHero","bgGradient","image","undefined","pt","py","space","direction","textStyle","maxWidth","CategoryView","posts","subnavigation","nodes","mx","post","href","WritingSubNavigation","categories","useStaticQuery","allCategory","scrollbarBG","thumbBG","alignItems","sx","overflowX","overflowY","scrollbarWidth","scrollbarColor","height","background","backgroundColor","borderWidth","borderStyle","borderColor","listStyleType","spacing","ml","activeClassName","item","name","paddingLarge","paddingMedium","paddingSmall","data","category","breadcrumbListItems","url","gradient"],"sourceRoot":""}