{"version":3,"file":"component---src-templates-garden-tsx-2a2914d39b283e4d334b.js","mappings":"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","sources":["webpack://www/../node_modules/@chakra-ui/layout/dist/esm/grid.js","webpack://www/../node_modules/@chakra-ui/tag/dist/esm/tag.js","webpack://www/./src/templates/garden.tsx"],"sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { filterUndefined, mapResponsive, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/grid\n */\n\nexport var Grid = /*#__PURE__*/forwardRef(function (props, ref) {\n  var area = props.area,\n      templateAreas = props.templateAreas,\n      gap = props.gap,\n      rowGap = props.rowGap,\n      columnGap = props.columnGap,\n      column = props.column,\n      row = props.row,\n      autoFlow = props.autoFlow,\n      autoRows = props.autoRows,\n      templateRows = props.templateRows,\n      autoColumns = props.autoColumns,\n      templateColumns = props.templateColumns,\n      rest = _objectWithoutPropertiesLoose(props, [\"area\", \"templateAreas\", \"gap\", \"rowGap\", \"columnGap\", \"column\", \"row\", \"autoFlow\", \"autoRows\", \"templateRows\", \"autoColumns\", \"templateColumns\"]);\n\n  var styles = {\n    display: \"grid\",\n    gridArea: area,\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});\n\nif (__DEV__) {\n  Grid.displayName = \"Grid\";\n}\n\nfunction spanFn(span) {\n  return mapResponsive(span, function (value) {\n    return value === \"auto\" ? \"auto\" : \"span \" + value + \"/span \" + value;\n  });\n}\n\nexport var GridItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var colSpan = props.colSpan,\n      colStart = props.colStart,\n      colEnd = props.colEnd,\n      rowEnd = props.rowEnd,\n      rowSpan = props.rowSpan,\n      rowStart = props.rowStart,\n      rest = _objectWithoutPropertiesLoose(props, [\"colSpan\", \"colStart\", \"colEnd\", \"rowEnd\", \"rowSpan\", \"rowStart\"]);\n\n  var styles = filterUndefined({\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { Icon } from \"@chakra-ui/icon\";\nimport { chakra, forwardRef, omitThemingProps, StylesProvider, useMultiStyleConfig, useStyles } from \"@chakra-ui/system\";\nimport { __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * The tag component is used to label or categorize UI elements.\n * To style the tag globally, change the styles in `theme.components.Tag`\n * @see Docs https://chakra-ui.com/tag\n */\n\nexport var Tag = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Tag\", props);\n  var ownProps = omitThemingProps(props);\n\n  var containerStyles = _extends({\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\"\n  }, styles.container);\n\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref\n  }, ownProps, {\n    __css: containerStyles\n  })));\n});\n\nif (__DEV__) {\n  Tag.displayName = \"Tag\";\n}\n\nexport var TagLabel = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    isTruncated: true\n  }, props, {\n    __css: styles.label\n  }));\n});\n\nif (__DEV__) {\n  TagLabel.displayName = \"TagLabel\";\n}\n\nexport var TagLeftIcon = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    verticalAlign: \"top\",\n    marginEnd: \"0.5rem\"\n  }, props));\n});\n\nif (__DEV__) {\n  TagLeftIcon.displayName = \"TagLeftIcon\";\n}\n\nexport var TagRightIcon = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    verticalAlign: \"top\",\n    marginStart: \"0.5rem\"\n  }, props));\n});\n\nif (__DEV__) {\n  TagRightIcon.displayName = \"TagRightIcon\";\n}\n\nvar TagCloseIcon = function TagCloseIcon(props) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    verticalAlign: \"inherit\",\n    viewBox: \"0 0 512 512\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n  }));\n};\n\nif (__DEV__) {\n  TagCloseIcon.displayName = \"TagCloseIcon\";\n}\n/**\n * TagCloseButton is used to close \"remove\" the tag\n * @see Docs https://chakra-ui.com/tag\n */\n\n\nexport var TagCloseButton = function TagCloseButton(props) {\n  var isDisabled = props.isDisabled,\n      children = props.children,\n      rest = _objectWithoutPropertiesLoose(props, [\"isDisabled\", \"children\"]);\n\n  var styles = useStyles();\n\n  var btnStyles = _extends({\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    outline: \"0\"\n  }, styles.closeButton);\n\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({}, rest, {\n    type: \"button\",\n    \"aria-label\": \"close\",\n    disabled: isDisabled,\n    __css: btnStyles\n  }), children || /*#__PURE__*/React.createElement(TagCloseIcon, null));\n};\n\nif (__DEV__) {\n  TagCloseButton.displayName = \"TagCloseButton\";\n}","import * as React from \"react\"\nimport { PageProps, graphql } from \"gatsby\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport { RiPlantFill as PlantIcon } from \"react-icons/ri\"\nimport {\n  Container,\n  Text,\n  Divider,\n  Flex,\n  Tag,\n  TagLabel,\n  Grid,\n  Box,\n  Link as ExternalLink,\n  Icon,\n  Stack,\n} from \"@chakra-ui/react\"\nimport { Layout } from \"../components/blocks/layout\"\nimport { Link } from \"../components/link\"\nimport { SkipNavContent } from \"../components/a11y/skip-nav\"\nimport { Prose } from \"../components/typography/prose\"\nimport { SEO } from \"../components/seo\"\nimport { Heading } from \"../components/typography/heading\"\nimport { Spacer } from \"../components/blocks/spacer\"\nimport { components } from \"../components/mdx\"\nimport { article } from \"../constants/json-ld\"\nimport { ShareAnywhereButton, TwitterButton } from \"../components/buttons\"\nimport { site } from \"../constants/meta\"\n\ntype DataProps = {\n  garden: {\n    title: string\n    slug: string\n    body: string\n    icon: string\n    seoLastUpdated: string\n    lastUpdated: string\n    seoDate: string\n    yearDate: string\n    date: string\n    tags: string[]\n    timeToRead: number\n    excerpt: string\n    parent: {\n      parent: {\n        relativePath: string\n      }\n    }\n  }\n}\n\nconst GardenTemplate: React.FC<PageProps<DataProps>> = ({ data: { garden }, location: { pathname } }) => {\n  const [hasShareApi, setHasShareApi] = React.useState(false)\n\n  React.useEffect(() => {\n    setHasShareApi(!!window.navigator.share)\n  }, [])\n  return (\n    <Layout>\n      <SEO title={garden.title} description={garden.excerpt} image=\"/social/digital-garden.png\">\n        <meta name=\"twitter:label1\" value=\"Time To Read\" />\n        <meta name=\"twitter:data1\" value={`${garden.timeToRead} Minutes`} />\n        <meta name=\"twitter:label2\" value=\"Category\" />\n        <meta name=\"twitter:data2\" value={garden.icon} />\n        <meta name=\"article:published_time\" content={garden.seoDate} />\n        <meta name=\"article:modified_time\" content={garden.seoLastUpdated} />\n        <script type=\"application/ld+json\">\n          {JSON.stringify(\n            article({\n              isGarden: true,\n              post: {\n                title: garden.title,\n                description: garden.excerpt,\n                slug: garden.slug,\n                image: `/social/digital-garden.png`,\n                date: garden.seoDate,\n                lastUpdated: garden.seoLastUpdated,\n                year: garden.yearDate,\n              },\n              category: {\n                name: `Digital Garden`,\n                slug: `/garden`,\n              },\n            })\n          )}\n        </script>\n      </SEO>\n      <Container variant=\"proseRoot\">\n        <SkipNavContent>\n          <Heading as=\"h1\">{garden.title}</Heading>\n          <Spacer size={6} axis=\"vertical\" />\n          <Divider />\n          <Spacer size={4} axis=\"vertical\" />\n          <Grid gridGap={2} gridTemplateColumns={[`1fr`, null, `1fr auto`]} fontSize={[`sm`, `md`, null, null, `lg`]}>\n            <Text>\n              Created {garden.date} – Last Updated {garden.lastUpdated}\n            </Text>\n            <Flex flexWrap=\"wrap\" justifyContent={[`flex-start`, null, `flex-end`]}>\n              {garden.tags.map((tag) => (\n                <Box as=\"span\" ml={2} _first={{ ml: 0 }} key={tag}>\n                  {tag}\n                </Box>\n              ))}\n            </Flex>\n            <Tag colorScheme=\"green\" justifySelf=\"flex-start\">\n              <TagLabel>\n                <Link to=\"/garden\">Digital Garden</Link>\n              </TagLabel>\n            </Tag>\n          </Grid>\n          <Spacer size={12} axis=\"vertical\" />\n          <Prose>\n            <MDXProvider components={components}>\n              <MDXRenderer>{garden.body}</MDXRenderer>\n            </MDXProvider>\n          </Prose>\n          <Spacer size={12} axis=\"vertical\" />\n          <Divider />\n          <Spacer size={6} axis=\"vertical\" />\n          <Stack\n            direction={[`column`, `row`]}\n            display=\"flex\"\n            spacing=\"5\"\n            justifyContent={[`flex-start`, `space-between`]}\n            alignItems={[`flex-start`, `center`]}\n          >\n            <Box>\n              {/* <ExternalLink\n                fontSize={[`md`, null, null, `1.125rem`]}\n                fontWeight=\"medium\"\n                href={`https://github.com/LekoArts/portfolio-v2/edit/main/www/content/garden/${garden.parent.parent.relativePath}`}\n              >\n                Edit on GitHub\n              </ExternalLink> */}\n              {` `}-{` `}\n              <ExternalLink\n                fontSize={[`md`, null, null, `1.125rem`]}\n                fontWeight=\"medium\"\n                href={`https://www.twitter.com/search?q=${encodeURIComponent(`https://www.amankalra.com${pathname}`)}`}\n              >\n                Discuss on Twitter\n              </ExternalLink>\n            </Box>\n            {hasShareApi ? (\n              <Stack direction={[`column`, `row`]}>\n                <ShareAnywhereButton link={`${site.url}${garden.slug}`} message={garden.title} />\n                <TwitterButton link={`${site.url}${garden.slug}`} message={garden.title} variant=\"outline\" />\n              </Stack>\n            ) : (\n              <TwitterButton link={`${site.url}${garden.slug}`} message={garden.title} />\n            )}\n          </Stack>\n          <Spacer size={12} axis=\"vertical\" />\n          <Box\n            textStyle=\"prominent\"\n            bgGradient=\"linear(to-tr, green.800, lime.600)\"\n            borderRadius=\"xl\"\n            p={6}\n            display=\"flex\"\n            flexDirection=\"row\"\n            alignItems=\"center\"\n            color=\"green.100\"\n            boxShadow=\"xl\"\n            textShadow=\"0px 2px 0px rgba(0, 0, 0, 0.35)\"\n          >\n            <Icon\n              as={PlantIcon}\n              height={[6, 8, 12]}\n              width={[6, 8, 12]}\n              mr={6}\n              color=\"lime.300\"\n              sx={{ filter: `drop-shadow(0px 3px 10px rgba(0, 0, 0, 0.25))` }}\n            />\n            <Box>\n              Want to learn more?{` `}\n              <Link to=\"/garden\" color=\"white\">\n                Browse my Digital Garden\n              </Link>\n            </Box>\n          </Box>\n        </SkipNavContent>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default GardenTemplate\n\nexport const query = graphql`\n  query GardenTemplate($slug: String!) {\n    garden(slug: { eq: $slug }) {\n      title\n      body\n      slug\n      icon\n      seoLastUpdated: lastUpdated\n      lastUpdated(formatString: \"MMM DD, YYYY\")\n      seoDate: date\n      date(formatString: \"MMM DD, YYYY\")\n      yearDate: date(formatString: \"YYYY\")\n      tags\n      timeToRead\n      excerpt\n      ... on MdxGarden {\n        parent {\n          ... on Mdx {\n            parent {\n              ... on File {\n                relativePath\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","Grid","props","ref","area","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","styles","display","gridArea","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","__css","displayName","Tag","ownProps","containerStyles","verticalAlign","alignItems","maxWidth","container","value","TagLabel","isTruncated","label","TagLeftIcon","marginEnd","TagRightIcon","marginStart","TagCloseIcon","viewBox","fill","d","TagCloseButton","isDisabled","children","btnStyles","justifyContent","outline","closeButton","type","disabled","garden","data","pathname","location","React","hasShareApi","setHasShareApi","window","navigator","share","title","description","excerpt","image","name","timeToRead","icon","content","seoDate","seoLastUpdated","JSON","stringify","article","isGarden","post","slug","date","lastUpdated","year","yearDate","category","variant","as","size","axis","fontSize","flexWrap","tags","map","tag","ml","_first","colorScheme","justifySelf","to","MDXProvider","components","MDXRenderer","body","direction","spacing","fontWeight","href","encodeURIComponent","link","site","message","textStyle","bgGradient","borderRadius","p","flexDirection","color","boxShadow","textShadow","PlantIcon","height","width","mr","sx","filter"],"sourceRoot":""}